[{"F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\index.js":"1","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\App.js":"2","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\pages\\Login.js":"3","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\pages\\AdminDashboard.js":"4","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\pages\\CgDashboard.js":"5","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\pages\\SoDashboard.js":"6","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\pages\\AoDashboard.js":"7","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\pages\\FrontDashboard.js":"8","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\utils\\Common.js":"9","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\forms\\Loginform.js":"10","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\menus\\Somenu.js":"11","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\menus\\AdminMenu.js":"12","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\menus\\Aomenu.js":"13","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\contents\\AdminContent.js":"14","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\menus\\Cgmenu.js":"15","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\menus\\Frontmenu.js":"16","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\contents\\CgContent.js":"17","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\contents\\SoContent.js":"18","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\contents\\Frontcontent.js":"19","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\contents\\AoContent.js":"20","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\Footer\\index.js":"21","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\Appbars\\AppbarLogin\\index.js":"22","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\forms\\Letterform.js":"23","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\forms\\Emailform.js":"24","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\forms\\Chequeform.js":"25","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\forms\\Faxform.js":"26","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\data\\data.js":"27","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\headers\\Header.js":"28","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\headers\\AppbarLogin.js":"29","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\headers\\frontheader.js":"30","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\Footer\\AppFooter.js":"31","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\headers\\AppbarFront.js":"32","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\contents\\FrontCont.js":"33","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\forms\\Fileuploadform.js":"34","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\Resultview\\PostalResult.js":"35","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\pages\\FrontSearch.js":"36","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\contents\\FrontSearchContent.js":"37","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\headers\\AppbarFrontSearch.js":"38","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\headers\\AppbarAo.js":"39","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\headers\\AppbarAoSearch.js":"40","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\pages\\AoSearch.js":"41","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\contents\\AoSearchContent.js":"42","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\pages\\AoPostalDetails.js":"43","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\contents\\AoDetailContent.js":"44","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\headers\\AppbarSo.js":"45","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\pages\\CgPostalDetails.js":"46","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\contents\\CgDetailContent.js":"47","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\headers\\AppbarCg.js":"48","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\pages\\SoPostalDetails.js":"49","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\contents\\SoDetailContent.js":"50","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\pages\\CgSearch.js":"51","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\headers\\AppbarCgSearch.js":"52","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\contents\\CgSearchContent.js":"53","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\pages\\SoSearch.js":"54","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\headers\\AppbarSoSearch.js":"55","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\contents\\SoSearchContent.js":"56","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\pages\\Logout.js":"57","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\LogedUser.js":"58","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\context\\PostalContext.js":"59","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\reducers\\PostalReducers.js":"60","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\forms\\AssignForm.js":"61","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\models\\FormModel.js":"62","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\forms\\CloseForm.js":"63","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\forms\\CommentForm.js":"64","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\contents\\Comments.js":"65","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\forms\\Uploadform.js":"66","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\contents\\Content.js":"67","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\forms\\Fileuploadformpdf.js":"68","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\contents\\AoDetailContent copy.js":"69","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\img\\ImageComponent.js":"70","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\contents\\LetterPath.js":"71","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\forms\\Workassign.js":"72"},{"size":220,"mtime":1608544197187,"results":"73","hashOfConfig":"74"},{"size":1857,"mtime":1608544147683,"results":"75","hashOfConfig":"74"},{"size":381,"mtime":1608542216651,"results":"76","hashOfConfig":"74"},{"size":642,"mtime":1608183425176,"results":"77","hashOfConfig":"74"},{"size":573,"mtime":1608527559118,"results":"78","hashOfConfig":"74"},{"size":639,"mtime":1608476044694,"results":"79","hashOfConfig":"74"},{"size":767,"mtime":1608618631100,"results":"80","hashOfConfig":"74"},{"size":596,"mtime":1608526563685,"results":"81","hashOfConfig":"74"},{"size":2327,"mtime":1608720058422,"results":"82","hashOfConfig":"74"},{"size":5859,"mtime":1612937092090,"results":"83","hashOfConfig":"74"},{"size":3628,"mtime":1608183425131,"results":"84","hashOfConfig":"74"},{"size":2813,"mtime":1608183425125,"results":"85","hashOfConfig":"74"},{"size":2810,"mtime":1608183425126,"results":"86","hashOfConfig":"74"},{"size":651,"mtime":1608183424405,"results":"87","hashOfConfig":"74"},{"size":2784,"mtime":1608183425129,"results":"88","hashOfConfig":"74"},{"size":2814,"mtime":1608183425130,"results":"89","hashOfConfig":"74"},{"size":645,"mtime":1608183424420,"results":"90","hashOfConfig":"74"},{"size":4118,"mtime":1610027448445,"results":"91","hashOfConfig":"74"},{"size":1778,"mtime":1608183424621,"results":"92","hashOfConfig":"74"},{"size":4735,"mtime":1610008204433,"results":"93","hashOfConfig":"74"},{"size":594,"mtime":1608183424405,"results":"94","hashOfConfig":"74"},{"size":681,"mtime":1608185254204,"results":"95","hashOfConfig":"74"},{"size":13902,"mtime":1609913432105,"results":"96","hashOfConfig":"74"},{"size":8214,"mtime":1608719583074,"results":"97","hashOfConfig":"74"},{"size":8361,"mtime":1608287715096,"results":"98","hashOfConfig":"74"},{"size":8219,"mtime":1610359923446,"results":"99","hashOfConfig":"74"},{"size":2992,"mtime":1614243125569,"results":"100","hashOfConfig":"74"},{"size":7276,"mtime":1608527143999,"results":"101","hashOfConfig":"74"},{"size":1341,"mtime":1608529415415,"results":"102","hashOfConfig":"74"},{"size":1001,"mtime":1608527144062,"results":"103","hashOfConfig":"74"},{"size":913,"mtime":1608364563016,"results":"104","hashOfConfig":"74"},{"size":1845,"mtime":1608529375469,"results":"105","hashOfConfig":"74"},{"size":3031,"mtime":1608203561404,"results":"106","hashOfConfig":"74"},{"size":7631,"mtime":1609913472198,"results":"107","hashOfConfig":"74"},{"size":1411,"mtime":1608366510275,"results":"108","hashOfConfig":"74"},{"size":681,"mtime":1608375299259,"results":"109","hashOfConfig":"74"},{"size":4208,"mtime":1608459851863,"results":"110","hashOfConfig":"74"},{"size":1865,"mtime":1608529388368,"results":"111","hashOfConfig":"74"},{"size":1836,"mtime":1608529280895,"results":"112","hashOfConfig":"74"},{"size":1856,"mtime":1608529327361,"results":"113","hashOfConfig":"74"},{"size":807,"mtime":1608541854338,"results":"114","hashOfConfig":"74"},{"size":12080,"mtime":1608461151048,"results":"115","hashOfConfig":"74"},{"size":669,"mtime":1608541785157,"results":"116","hashOfConfig":"74"},{"size":9705,"mtime":1612770771105,"results":"117","hashOfConfig":"74"},{"size":1836,"mtime":1610028018099,"results":"118","hashOfConfig":"74"},{"size":537,"mtime":1608477657870,"results":"119","hashOfConfig":"74"},{"size":10820,"mtime":1608477169383,"results":"120","hashOfConfig":"74"},{"size":1836,"mtime":1608529349190,"results":"121","hashOfConfig":"74"},{"size":537,"mtime":1608477678982,"results":"122","hashOfConfig":"74"},{"size":10005,"mtime":1615958584340,"results":"123","hashOfConfig":"74"},{"size":679,"mtime":1608477727178,"results":"124","hashOfConfig":"74"},{"size":1856,"mtime":1608529362290,"results":"125","hashOfConfig":"74"},{"size":12080,"mtime":1608477005696,"results":"126","hashOfConfig":"74"},{"size":679,"mtime":1608477748898,"results":"127","hashOfConfig":"74"},{"size":1856,"mtime":1610027911829,"results":"128","hashOfConfig":"74"},{"size":12080,"mtime":1610015659149,"results":"129","hashOfConfig":"74"},{"size":841,"mtime":1608526793602,"results":"130","hashOfConfig":"74"},{"size":504,"mtime":1608529000454,"results":"131","hashOfConfig":"74"},{"size":428,"mtime":1608602164324,"results":"132","hashOfConfig":"74"},{"size":287,"mtime":1608602156302,"results":"133","hashOfConfig":"74"},{"size":5140,"mtime":1609578261087,"results":"134","hashOfConfig":"74"},{"size":2001,"mtime":1610079747684,"results":"135","hashOfConfig":"74"},{"size":3868,"mtime":1609583301039,"results":"136","hashOfConfig":"74"},{"size":3837,"mtime":1609671475708,"results":"137","hashOfConfig":"74"},{"size":2426,"mtime":1610079656723,"results":"138","hashOfConfig":"74"},{"size":152,"mtime":1608183424637,"results":"139","hashOfConfig":"74"},{"size":2355,"mtime":1608183424605,"results":"140","hashOfConfig":"74"},{"size":8159,"mtime":1608377712097,"results":"141","hashOfConfig":"74"},{"size":11599,"mtime":1609561780526,"results":"142","hashOfConfig":"74"},{"size":571,"mtime":1609925372593,"results":"143","hashOfConfig":"74"},{"size":2043,"mtime":1611674034655,"results":"144","hashOfConfig":"74"},{"size":6127,"mtime":1615960795255,"results":"145","hashOfConfig":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},"guqow",{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"148"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"148"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"148"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"148"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"148"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"148"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"176"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"148"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"176"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"176"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"176"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"148"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"148"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"148"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"148"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"148"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"148"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"148"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"222","messages":"223","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"148"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"148"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"148"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"148"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"148"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"241"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"148"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"148"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"148"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"148"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"148"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"148"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"148"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"148"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"148"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"148"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"148"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"148"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"148"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"148"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"148"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"148"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"148"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"148"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"148"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"148"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"148"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"148"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"148"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"148"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"148"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"148"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"148"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"331","messages":"332","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"333","messages":"334","errorCount":2,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"335","messages":"336","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"337","messages":"338","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"148"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"148"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"148"},"F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\index.js",[],["346","347"],"F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\App.js",[],"F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\pages\\Login.js",[],"F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\pages\\AdminDashboard.js",["348","349","350","351"],"import React from 'react'\r\nimport { getId, getRoles, getToken, getUsername } from '../utils/Common';\r\nimport Footer from '../components/Footer'\r\nimport Header from '../components/headers/frontheader'\r\nimport Menu from '../components/menus/AdminMenu'\r\nimport Content from '../components/contents/AdminContent'\r\n\r\nfunction AdminDashboard() {\r\n\r\n    const id = getId();\r\n    const token = getToken();\r\n    const roles = getRoles();\r\n    const username = getUsername();\r\n\r\n    return (\r\n        <>\r\n            <Header/>\r\n            <Menu/>\r\n            <Content/>\r\n            <Footer/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdminDashboard\r\n","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\pages\\CgDashboard.js",["352","353","354","355"],"import React from 'react'\r\nimport { getId, getRoles, getToken, getUsername } from '../utils/Common';\r\nimport Footer from '../components/Footer/AppFooter'\r\nimport AppbarCg from '../components/headers/AppbarCg'\r\nimport Content from '../components/contents/CgContent'\r\n\r\nfunction CgDashboard() {\r\n\r\n    const id = getId();\r\n    const token = getToken();\r\n    const roles = getRoles();\r\n    const username = getUsername();\r\n\r\n    return (\r\n        <>\r\n            <AppbarCg/>\r\n            <Content/>\r\n            <Footer/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CgDashboard\r\n","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\pages\\SoDashboard.js",["356","357","358","359"],"import React from 'react'\r\nimport { getId, getRoles, getToken, getUsername } from '../utils/Common';\r\nimport Footer from '../components/Footer/AppFooter'\r\nimport AppbarSo from '../components/headers/AppbarSo'\r\nimport SoContent from '../components/contents/SoContent'\r\n\r\nfunction SoDashboard() {\r\n\r\n    const id = getId();\r\n    const token = getToken();\r\n    const roles = getRoles();\r\n    const username = getUsername();\r\n\r\n    return (\r\n        <>\r\n            <AppbarSo />\r\n            <div align=\"center\" >\r\n                <SoContent />\r\n            </div>\r\n            <Footer />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SoDashboard\r\n","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\pages\\AoDashboard.js",["360","361","362","363"],"import React from 'react'\r\nimport { getId, getRoles, getToken, getUsername } from '../utils/Common';\r\nimport Footer from '../components/Footer/AppFooter'\r\nimport AppbarAo from '../components/headers/AppbarAo'\r\nimport Content from '../components/contents/AoContent'\r\nimport { PostalProvider } from '../context/PostalContext'\r\n\r\nfunction AoDashboard() {\r\n\r\n    const id = getId();\r\n    const token = getToken();\r\n    const roles = getRoles();\r\n    const username = getUsername();\r\n\r\n    return (\r\n        <>\r\n            <AppbarAo />\r\n            <div align=\"center\" >\r\n                <PostalProvider>\r\n                    <Content />\r\n                </PostalProvider>\r\n            </div>\r\n            <Footer />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AoDashboard\r\n","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\pages\\FrontDashboard.js",["364","365","366","367"],"import React from 'react'\r\nimport { getId, getRoles, getToken, getUsername } from '../utils/Common';\r\nimport Footer from '../components/Footer/AppFooter'\r\nimport AppbarFront from '../components/headers/AppbarFront';\r\nimport FrontCont from '../components/contents/FrontCont';\r\n\r\n\r\nfunction FrontDashboard() {\r\n\r\n    const id = getId();\r\n    const token = getToken();\r\n    const roles = getRoles();\r\n    const username = getUsername();\r\n\r\n    return (\r\n        <>\r\n            <AppbarFront/>\r\n            <FrontCont/>\r\n            <Footer/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FrontDashboard\r\n","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\utils\\Common.js",[],"F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\forms\\Loginform.js",["368","369","370","371","372","373","374","375","376"],"import React, { useState } from 'react'\r\nimport '../../components/css/loginform.css'\r\nimport { loginformdata, Apidata } from '../../data/data'\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport axios from 'axios';\r\nimport { setUsers, setUserSession, getToken } from '../../utils/Common';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        backgroundColor: '#fff',\r\n        padding: \"30px\"\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\n\r\nfunction Loginform() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    let loginSchema = yup.object().shape({\r\n        username: yup.string().required(),\r\n        password: yup.string().required()\r\n    });\r\n\r\n    const { register, handleSubmit, errors } = useForm({\r\n        validationSchema: loginSchema\r\n    });\r\n\r\n    function initData(path,awt){\r\n        axios.get(path + 'v1/user/all',  { headers: { \"Authorization\": `Bearer ${awt}` }})\r\n        .then(response => {\r\n            const result = response.data;\r\n            setUsers(JSON.stringify(result))\r\n            console.log(result);\r\n        })\r\n        .catch(err=>{\r\n\r\n        })\r\n    }\r\n    \r\n    \r\n    function onSubmit(data) {\r\n        const apipath = Apidata.api;\r\n        // display form data on success\r\n        setError(null);\r\n        setLoading(true);\r\n        axios.post(apipath + 'api/auth/signin', { username: data.username, password: data.password }).then(response => {\r\n            setLoading(false);\r\n\r\n            setUserSession(response.data.jwt, response.data.username, response.data.id, response.data.nic, response.data.email, response.data.mobileno, response.data.district, response.data.fullName, response.data.roles);\r\n            //this.props.history.push('/dashboard');\r\n            initData(apipath,response.data.jwt);\r\n            if (response.data.roles == 'ROLE_ADMIN') {\r\n                history.push(\"/admin_dashboard\");\r\n            }\r\n            else if (response.data.roles == 'ROLE_FRONT') {\r\n                history.push(\"/front_dashboard\");\r\n            }\r\n            else if (response.data.roles == 'ROLE_AO') {\r\n                history.push(\"/ao_dashboard\");\r\n            }\r\n            else if (response.data.roles == 'ROLE_CG') {\r\n                history.push(\"/cg_dashboard\");\r\n            }\r\n            else if (response.data.roles == 'ROLE_SO') {\r\n                history.push(\"/so_dashboard\");\r\n            } else {\r\n\r\n            }\r\n\r\n\r\n        }).catch(error => {\r\n            setLoading(false);\r\n            if (error.response.status === 401) setError(error.response.data.message);\r\n            else setError(\"Something went wrong. Please try again later.\");\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline />\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h5\" variant=\"h5\">\r\n                        {loginformdata.title}\r\n                    </Typography>\r\n                    <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            inputRef={register}\r\n                            id=\"username\"\r\n                            label={loginformdata.username}\r\n                            name=\"username\"\r\n                            autoFocus\r\n                            error={errors.username ? true : false}\r\n                        />\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            inputRef={register}\r\n                            required\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label={loginformdata.password}\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            error={errors.password ? true : false}\r\n                        />\r\n\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                        >\r\n                            {loginformdata.login}\r\n                        </Button>\r\n\r\n                    </form>\r\n                </div>\r\n\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Loginform;\r\n","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\menus\\Somenu.js",["377","378","379"],"import React from 'react'\r\nimport { loginformdata, Sodata } from '../../data/data'\r\nimport {getUsername, getUser} from '../../utils/Common'\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Somenu() {\r\n    const username=getUsername();\r\n    const user=getUser();\r\n    //user.username='Samantga';\r\n\r\n    return (\r\n        \r\n        <aside className=\"main-sidebar sidebar-dark-primary elevation-4\">\r\n            {/* Brand Logo */}\r\n            <a href=\"index3.html\" className=\"brand-link\">\r\n                <img src=\"dist/img/AdminLTELogo.png\" alt=\"AdminLTE Logo\" className=\"brand-image img-circle elevation-3\" style={{ opacity: '.8' }} />\r\n                <span className=\"brand-text font-weight-light\">{loginformdata.ecpms}</span>\r\n            </a>\r\n            {/* Sidebar */}\r\n            <div className=\"sidebar\">\r\n                {/* Sidebar user panel (optional) */}\r\n                <div className=\"user-panel mt-3 pb-3 mb-3 d-flex\">\r\n                    <div className=\"image\">\r\n                        <img src=\"dist/img/user2-160x160.jpg\" className=\"img-circle elevation-2\" alt=\"User Image\" />\r\n                    </div>\r\n                    <div className=\"info\">\r\n                        <a href=\"#\" className=\"d-block\">{username}</a>\r\n                    </div>\r\n                </div>\r\n               \r\n                {/* Sidebar Menu */}\r\n                <nav className=\"mt-2\">\r\n                    <ul className=\"nav nav-pills nav-sidebar flex-column\" data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\">\r\n                        {/* Add icons to the links using the .nav-icon class\r\n         with font-awesome or any other icon font library */}\r\n                       \r\n                        <li className=\"nav-item\">\r\n                            <Link to='/front_dashboard' className=\"nav-link\">\r\n                                <i className=\"nav-icon fas fa-envelope\" />\r\n                                <p>\r\n                                    {Sodata.new_postals}\r\n                                </p>\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to='/front_dashboard' className=\"nav-link\">\r\n                                <i className=\"nav-icon fas fa-envelope\" />\r\n                                <p>\r\n                                    {Sodata.open_postals}\r\n                                </p>\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to='/front_dashboard' className=\"nav-link\">\r\n                                <i className=\"nav-icon fas fa-envelope\" />\r\n                                <p>\r\n                                    {Sodata.closed_postals}\r\n                                </p>\r\n                            </Link>\r\n                        </li>\r\n                        \r\n                        <li className=\"nav-item\">\r\n                            <Link to='/front_search' className=\"nav-link\">\r\n                                <i className=\"nav-icon fas fa-search\" />\r\n                                <p>\r\n                                     {loginformdata.search}\r\n                                </p>\r\n                            </Link>\r\n                        </li>\r\n                        \r\n                        \r\n                        \r\n                    </ul>\r\n                </nav>\r\n                {/* /.sidebar-menu */}\r\n            </div>\r\n            {/* /.sidebar */}\r\n        </aside>\r\n    )\r\n}\r\n\r\nexport default Somenu\r\n",["380","381"],"F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\menus\\AdminMenu.js",["382","383","384"],"import React from 'react'\r\nimport { loginformdata, Admindata } from '../../data/data'\r\nimport {getUsername, getUser} from '../../utils/Common'\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction AdminMenu() {\r\n    const username=getUsername();\r\n    const user=getUser();\r\n    //user.username='Samantga';\r\n\r\n    return (\r\n        \r\n        <aside className=\"main-sidebar sidebar-dark-primary elevation-4\">\r\n            {/* Brand Logo */}\r\n            <a href=\"index3.html\" className=\"brand-link\">\r\n                <img src=\"dist/img/AdminLTELogo.png\" alt=\"AdminLTE Logo\" className=\"brand-image img-circle elevation-3\" style={{ opacity: '.8' }} />\r\n                <span className=\"brand-text font-weight-light\">{loginformdata.ecpms}</span>\r\n            </a>\r\n            {/* Sidebar */}\r\n            <div className=\"sidebar\">\r\n                {/* Sidebar user panel (optional) */}\r\n                <div className=\"user-panel mt-3 pb-3 mb-3 d-flex\">\r\n                    <div className=\"image\">\r\n                        <img src=\"dist/img/user2-160x160.jpg\" className=\"img-circle elevation-2\" alt=\"User Image\" />\r\n                    </div>\r\n                    <div className=\"info\">\r\n                        <a href=\"#\" className=\"d-block\">{username}</a>\r\n                    </div>\r\n                </div>\r\n               \r\n                {/* Sidebar Menu */}\r\n                <nav className=\"mt-2\">\r\n                    <ul className=\"nav nav-pills nav-sidebar flex-column\" data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\">\r\n                        {/* Add icons to the links using the .nav-icon class\r\n         with font-awesome or any other icon font library */}\r\n                       \r\n                        <li className=\"nav-item\">\r\n                            <Link to='/front_dashboard' className=\"nav-link\">\r\n                                <i className=\"nav-icon fas fa-user\" />\r\n                                <p>\r\n                                    {Admindata.new_user}\r\n                                </p>\r\n                            </Link>\r\n                        </li>\r\n                        \r\n                        <li className=\"nav-item\">\r\n                            <Link to='/front_search' className=\"nav-link\">\r\n                                <i className=\"nav-icon fas fa-search\" />\r\n                                <p>\r\n                                     {Admindata.new_path}\r\n                                </p>\r\n                            </Link>\r\n                        </li>\r\n                        \r\n                        \r\n                        \r\n                    </ul>\r\n                </nav>\r\n                {/* /.sidebar-menu */}\r\n            </div>\r\n            {/* /.sidebar */}\r\n        </aside>\r\n    )\r\n}\r\n\r\nexport default AdminMenu\r\n","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\menus\\Aomenu.js",["385","386","387"],"import React from 'react'\r\nimport { loginformdata, Aodata } from '../../data/data'\r\nimport {getUsername, getUser} from '../../utils/Common'\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Aomenu() {\r\n    const username=getUsername();\r\n    const user=getUser();\r\n    //user.username='Samantga';\r\n\r\n    return (\r\n        \r\n        <aside className=\"main-sidebar sidebar-dark-primary elevation-4\">\r\n            {/* Brand Logo */}\r\n            <a href=\"index3.html\" className=\"brand-link\">\r\n                <img src=\"dist/img/AdminLTELogo.png\" alt=\"AdminLTE Logo\" className=\"brand-image img-circle elevation-3\" style={{ opacity: '.8' }} />\r\n                <span className=\"brand-text font-weight-light\">{loginformdata.ecpms}</span>\r\n            </a>\r\n            {/* Sidebar */}\r\n            <div className=\"sidebar\">\r\n                {/* Sidebar user panel (optional) */}\r\n                <div className=\"user-panel mt-3 pb-3 mb-3 d-flex\">\r\n                    <div className=\"image\">\r\n                        <img src=\"dist/img/user2-160x160.jpg\" className=\"img-circle elevation-2\" alt=\"User Image\" />\r\n                    </div>\r\n                    <div className=\"info\">\r\n                        <a href=\"#\" className=\"d-block\">{username}</a>\r\n                    </div>\r\n                </div>\r\n               \r\n                {/* Sidebar Menu */}\r\n                <nav className=\"mt-2\">\r\n                    <ul className=\"nav nav-pills nav-sidebar flex-column\" data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\">\r\n                        {/* Add icons to the links using the .nav-icon class\r\n         with font-awesome or any other icon font library */}\r\n                       \r\n                        <li className=\"nav-item\">\r\n                            <Link to='/front_dashboard' className=\"nav-link\">\r\n                                <i className=\"nav-icon fas fa-envelope\" />\r\n                                <p>\r\n                                    {Aodata.new_postals}\r\n                                </p>\r\n                            </Link>\r\n                        </li>\r\n                        \r\n                        <li className=\"nav-item\">\r\n                            <Link to='/front_search' className=\"nav-link\">\r\n                                <i className=\"nav-icon fas fa-search\" />\r\n                                <p>\r\n                                     {loginformdata.search}\r\n                                </p>\r\n                            </Link>\r\n                        </li>\r\n                        \r\n                        \r\n                        \r\n                    </ul>\r\n                </nav>\r\n                {/* /.sidebar-menu */}\r\n            </div>\r\n            {/* /.sidebar */}\r\n        </aside>\r\n    )\r\n}\r\n\r\nexport default Aomenu\r\n","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\contents\\AdminContent.js",[],"F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\menus\\Cgmenu.js",["388","389","390"],"import React from 'react'\r\nimport { loginformdata, Cgdata } from '../../data/data'\r\nimport {getUsername, getUser} from '../../utils/Common'\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Cgmenu() {\r\n    const username=getUsername();\r\n    const user=getUser();\r\n    //user.username='Samantga';\r\n\r\n    return (\r\n        \r\n        <aside className=\"main-sidebar sidebar-dark-primary elevation-4\">\r\n            {/* Brand Logo */}\r\n            <a href=\"index3.html\" className=\"brand-link\">\r\n                <img src=\"dist/img/AdminLTELogo.png\" alt=\"AdminLTE Logo\" className=\"brand-image img-circle elevation-3\" style={{ opacity: '.8' }} />\r\n                <span className=\"brand-text font-weight-light\">{loginformdata.ecpms}</span>\r\n            </a>\r\n            {/* Sidebar */}\r\n            <div className=\"sidebar\">\r\n                {/* Sidebar user panel (optional) */}\r\n                <div className=\"user-panel mt-3 pb-3 mb-3 d-flex\">\r\n                    <div className=\"image\">\r\n                        <img src=\"dist/img/user2-160x160.jpg\" className=\"img-circle elevation-2\" alt=\"User Image\" />\r\n                    </div>\r\n                    <div className=\"info\">\r\n                        <a href=\"#\" className=\"d-block\">{username}</a>\r\n                    </div>\r\n                </div>\r\n               \r\n                {/* Sidebar Menu */}\r\n                <nav className=\"mt-2\">\r\n                    <ul className=\"nav nav-pills nav-sidebar flex-column\" data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\">\r\n                        {/* Add icons to the links using the .nav-icon class\r\n         with font-awesome or any other icon font library */}\r\n                       \r\n                        <li className=\"nav-item\">\r\n                            <Link to='/front_dashboard' className=\"nav-link\">\r\n                                <i className=\"nav-icon fas fa-envelope\" />\r\n                                <p>\r\n                                    {Cgdata.new_postals}\r\n                                </p>\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to='/front_search' className=\"nav-link\">\r\n                                <i className=\"nav-icon fas fa-search\" />\r\n                                <p>\r\n                                     {loginformdata.search}\r\n                                </p>\r\n                            </Link>\r\n                        </li>\r\n                        \r\n                        \r\n                        \r\n                    </ul>\r\n                </nav>\r\n                {/* /.sidebar-menu */}\r\n            </div>\r\n            {/* /.sidebar */}\r\n        </aside>\r\n    )\r\n}\r\n\r\nexport default Cgmenu\r\n","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\menus\\Frontmenu.js",["391","392","393"],"import React from 'react'\r\nimport { loginformdata } from '../../data/data'\r\nimport {getUsername, getUser} from '../../utils/Common'\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Frontmenu() {\r\n    const username=getUsername();\r\n    const user=getUser();\r\n    //user.username='Samantga';\r\n\r\n    return (\r\n        \r\n        <aside className=\"main-sidebar sidebar-dark-primary elevation-4\">\r\n            {/* Brand Logo */}\r\n            <a href=\"index3.html\" className=\"brand-link\">\r\n                <img src=\"dist/img/AdminLTELogo.png\" alt=\"AdminLTE Logo\" className=\"brand-image img-circle elevation-3\" style={{ opacity: '.8' }} />\r\n                <span className=\"brand-text font-weight-light\">{loginformdata.ecpms}</span>\r\n            </a>\r\n            {/* Sidebar */}\r\n            <div className=\"sidebar\">\r\n                {/* Sidebar user panel (optional) */}\r\n                <div className=\"user-panel mt-3 pb-3 mb-3 d-flex\">\r\n                    <div className=\"image\">\r\n                        <img src=\"dist/img/user2-160x160.jpg\" className=\"img-circle elevation-2\" alt=\"User Image\" />\r\n                    </div>\r\n                    <div className=\"info\">\r\n                        <a href=\"#\" className=\"d-block\">{username}</a>\r\n                    </div>\r\n                </div>\r\n               \r\n                {/* Sidebar Menu */}\r\n                <nav className=\"mt-2\">\r\n                    <ul className=\"nav nav-pills nav-sidebar flex-column\" data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\">\r\n                        {/* Add icons to the links using the .nav-icon class\r\n         with font-awesome or any other icon font library */}\r\n                       \r\n                        <li className=\"nav-item\">\r\n                            <Link to='/front_dashboard' className=\"nav-link\">\r\n                                <i className=\"nav-icon fas fa-envelope\" />\r\n                                <p>\r\n                                    {loginformdata.new_postal}\r\n                                </p>\r\n                            </Link>\r\n                        </li>\r\n                        \r\n                        <li className=\"nav-item\">\r\n                            <Link to='/front_search' className=\"nav-link\">\r\n                                <i className=\"nav-icon fas fa-search\" />\r\n                                <p>\r\n                                     {loginformdata.search}\r\n                                </p>\r\n                            </Link>\r\n                        </li>\r\n                        \r\n                        \r\n                        \r\n                    </ul>\r\n                </nav>\r\n                {/* /.sidebar-menu */}\r\n            </div>\r\n            {/* /.sidebar */}\r\n        </aside>\r\n    )\r\n}\r\n\r\nexport default Frontmenu\r\n","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\contents\\CgContent.js",[],"F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\contents\\SoContent.js",["394","395","396","397","398"],"import React,{ useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { searchdata, Apidata } from '../../data/data'\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport Pageview from '@material-ui/icons/Pageview';\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getToken, getId } from '../../utils/Common';\r\nimport Moment from 'moment';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n    paper: {\r\n        marginTop: 10,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        maxWidth: 900,\r\n    }\r\n});\r\n\r\n\r\nexport default function SoContent() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [postalList, setPostalList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        loadApiData();\r\n        return () => {\r\n        }\r\n    }, [])\r\n\r\n    function loadApiData() {\r\n        const apipath = Apidata.api;\r\n        const token = getToken();\r\n        const userId=getId();\r\n        setError(null);\r\n        setLoading(true);\r\n        axios.get(apipath +'v1/postal/assigned', { headers: { \"Authorization\": `Bearer ${token}`}, params: { id: userId }  })\r\n        .then(response => {\r\n            const result = response.data;\r\n            alert(response.data);\r\n            setPostalList(result);\r\n            setLoading(false);\r\n        }).catch(error => {\r\n            alert(error);\r\n            setLoading(false);\r\n        });\r\n    }\r\n    return (\r\n        <Paper className={classes.paper} elevation={5}>\r\n        <TableContainer component={Paper}>\r\n            <Table className={classes.table} aria-label=\"simple table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n\r\n                        <TableCell >{searchdata.res_title}</TableCell>\r\n                        <TableCell align=\"right\">{searchdata.res_sender}</TableCell>\r\n                        <TableCell align=\"right\">{searchdata.res_type}</TableCell>\r\n                        <TableCell align=\"right\">{searchdata.res_id}</TableCell>\r\n                        <TableCell align=\"right\">{searchdata.res_date}</TableCell>\r\n                        <TableCell></TableCell>\r\n                        <TableCell></TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {postalList && postalList.map((postal) => (\r\n                        <TableRow key={postal.id}>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                {postal.letterTitle}\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">{postal.senderName}</TableCell>\r\n                            <TableCell align=\"right\">{postal.postalType}</TableCell>\r\n                            <TableCell align=\"right\">{postal.id}</TableCell>\r\n                            <TableCell align=\"right\">{Moment(postal.receivedDate).format('YYYY-MM-DD')}</TableCell>\r\n                            <TableCell></TableCell>\r\n                             <TableCell>\r\n                             <Button className={classes.links} component={Link} to={{pathname:\"/so_details\", state:postal}} variant=\"contained\" color=\"primary\">\r\n                                        view\r\n                                    </Button>\r\n                             </TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    </Paper>\r\n        \r\n    )\r\n}\r\n","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\contents\\Frontcontent.js",[],"F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\contents\\AoContent.js",["399","400","401","402","403","404"],"import React, { useState, useEffect,useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { searchdata, Apidata } from '../../data/data'\r\nimport Button from '@material-ui/core/Button';\r\nimport Pageview from '@material-ui/icons/Pageview';\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getToken, getId } from '../../utils/Common';\r\nimport Moment from 'moment';\r\nimport { Link } from 'react-router-dom';\r\nimport {PostalContext} from '../../context/PostalContext'\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n    paper: {\r\n        marginTop: 10,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        maxWidth: 900,\r\n    }\r\n});\r\n\r\n\r\nexport default function AoContent() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [postalList, setPostalList] = useState([]);\r\n    const {dispatch} = useContext(PostalContext);\r\n\r\n    useEffect(() => {\r\n        loadApiData();\r\n        return () => {\r\n\r\n        }\r\n    }, [])\r\n\r\n    function loadApiData() {\r\n        const apipath = Apidata.api;\r\n        const token = getToken();\r\n\r\n        // display form data on success\r\n        setError(null);\r\n        setLoading(true);\r\n        axios.get(apipath + 'v1/postal/new', { headers: { \"Authorization\": `Bearer ${token}` } })\r\n            .then(response => {\r\n                const result = response.data;\r\n                console.log(result);\r\n                setPostalList(result);\r\n                result.map((p) => (\r\n                    dispatch({type:'ADD',postal:{\r\n                        name:\"Samantha\",\r\n                        age:20\r\n                    }}) \r\n                ));\r\n                setLoading(false);\r\n                //console.log(postals)\r\n            }).catch(error => {\r\n                setLoading(false);\r\n                //if (error.response.status === 401) setError(error.response.data.message);\r\n                //else setError(\"Something went wrong. Please try again later.\");\r\n            });\r\n    }\r\n    return (\r\n        <Paper className={classes.paper} elevation={5}>\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n\r\n                            <TableCell >{searchdata.res_title}</TableCell>\r\n                            <TableCell align=\"right\">{searchdata.res_sender}</TableCell>\r\n                            <TableCell align=\"right\">{searchdata.res_type}</TableCell>\r\n                            <TableCell align=\"right\">{searchdata.res_id}</TableCell>\r\n                            <TableCell align=\"right\">{searchdata.res_date}</TableCell>\r\n                            <TableCell></TableCell>\r\n                            <TableCell></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {postalList && postalList.map((postal) => (\r\n                            <TableRow key={postal.id}>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {postal.letterTitle}\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">{postal.senderName}</TableCell>\r\n                                <TableCell align=\"right\">{postal.postalType}</TableCell>\r\n                                <TableCell align=\"right\">{postal.id}</TableCell>\r\n                                <TableCell align=\"right\">{Moment(postal.receivedDate).format('YYYY-MM-DD')}</TableCell>\r\n                                <TableCell></TableCell>\r\n                                <TableCell>\r\n                                    <Button className={classes.links} component={Link} to={{pathname:\"/ao_details\", state:postal}} variant=\"contained\" color=\"primary\">\r\n                                        view\r\n                                    </Button>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </Paper>\r\n\r\n    )\r\n}\r\n","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\Footer\\index.js",[],"F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\Appbars\\AppbarLogin\\index.js",[],"F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\forms\\Letterform.js",["405","406","407"],"import React, { useState } from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport { LetterFormdata, Apidata } from '../../data/data'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from 'yup';\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getToken, getId } from '../../utils/Common';\r\nimport Fileuploadform from './Fileuploadform';\r\nimport PostalResult from '../Resultview/PostalResult';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        backgroundColor: '#fff',\r\n        padding: \"30px\"\r\n\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n}));\r\n\r\n\r\n\r\nfunction Letterform() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [viewform, setViewform] = useState(true);\r\n    const [viewuload, setViewuload] = useState(false);\r\n    const [postaldata, setPostaldata] = useState(null);\r\n    const date = new Date();\r\n\r\n    const formatedDate = `${date.getMonth() + 1}-${date.getDate()}-${date.getFullYear()}`\r\n\r\n    let letterschema = yup.object().shape({\r\n        past_ref: yup.string(),\r\n        reg_number: yup.string(),\r\n        postoffice: yup.string(),\r\n        letter_title: yup.string(),\r\n        sender_name: yup.string(),\r\n        sender_address: yup.string(),\r\n        receiver_name: yup.string(),\r\n        receiver_address: yup.string()\r\n        //recived_date: yup.date().required,\r\n    });\r\n\r\n    const { register, handleSubmit, errors } = useForm({\r\n        validationSchema: letterschema\r\n    });\r\n\r\n    function closeUploadForm() {\r\n        setViewuload(false);\r\n        setViewform(true);\r\n    }\r\n\r\n    function onSubmit(data) {\r\n        const apipath = Apidata.api;\r\n        const token = getToken();\r\n        const userId = getId();\r\n        setError(null);\r\n        setLoading(true);\r\n        axios.post(apipath + 'v1/postal', {\r\n            postalType: \"POSTAl\",\r\n            receivedMode: data.res_mode,\r\n            secret: data.secret,\r\n            receivedDate: data.recived_date,\r\n            regPostNumber: data.reg_number,\r\n            postOfficeName: data.postoffice,\r\n            pastRefNo: data.past_ref,\r\n            letterTitle: data.letter_title,\r\n            senderName: data.sender_name,\r\n            senderAddress: data.sender_address,\r\n            receiverName: data.receiver_name,\r\n            receiverAddress: data.receiver_address,\r\n            postalStatus: \"NEW\",\r\n            enteredUserId: userId,\r\n            attachment: data.attacments\r\n        }, { headers: { \"Authorization\": `Bearer ${token}` } })\r\n            .then(response => {\r\n                setPostaldata(response.data)\r\n                setLoading(false);\r\n                setViewform(false);\r\n                setViewuload(true);\r\n                alert(\"Saved\");\r\n            }).catch(error => {\r\n                setLoading(false);\r\n                alert(error);\r\n                if (error.response.status === 401) setError(error.response.data.message);\r\n                else setError(\"Something went wrong. Please try again later.\");\r\n            });\r\n    }\r\n\r\n\r\n    return (\r\n        <Paper className={classes.paper} elevation={5}>\r\n            {/*Form area*/}\r\n            { viewform && <><Typography variant=\"h6\" gutterBottom>\r\n                {LetterFormdata.title}\r\n            </Typography>\r\n                <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <FormControl component=\"fieldset\">\r\n                                <RadioGroup row aria-label=\"res_mode\" defaultValue=\"REG\">\r\n                                    <FormControlLabel\r\n                                        default\r\n                                        name=\"res_mode\"\r\n                                        inputRef={register}\r\n                                        value=\"REG\"\r\n                                        control={<Radio color=\"primary\" />}\r\n                                        label={LetterFormdata.registered_post} />\r\n                                    <FormControlLabel\r\n                                        value=\"NOR\"\r\n                                        name=\"res_mode\"\r\n                                        inputRef={register}\r\n                                        control={<Radio color=\"primary\" />}\r\n                                        label={LetterFormdata.normal_post} />\r\n                                    <FormControlLabel\r\n                                        name=\"res_mode\"\r\n                                        inputRef={register}\r\n                                        value=\"BYH\"\r\n                                        control={<Radio color=\"primary\" />}\r\n                                        label={LetterFormdata.byhand_post} />\r\n                                </RadioGroup>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <FormControl component=\"fieldset\">\r\n                                <RadioGroup row aria-label=\"secret\" defaultValue=\"NO\" >\r\n                                    <FormControlLabel\r\n                                        name=\"secret\"\r\n                                        inputRef={register}\r\n                                        value=\"NO\"\r\n                                        control={<Radio color=\"primary\" />}\r\n                                        label={LetterFormdata.not_secret} />\r\n                                    <FormControlLabel\r\n                                        name=\"secret\"\r\n                                        inputRef={register}\r\n                                        value=\"YES\"\r\n                                        control={<Radio color=\"primary\" />}\r\n                                        label={LetterFormdata.secret} />\r\n                                </RadioGroup>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={3}>\r\n                            <TextField\r\n                                id=\"recived_date\"\r\n                                name=\"recived_date\"\r\n                                label={LetterFormdata.recived_date}\r\n                                type=\"date\"\r\n                                inputRef={register}\r\n                                //error={errors.recived_date ? true : false}\r\n                                defaultValue={formatedDate}\r\n                                className={classes.textField}\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} sm={3}>\r\n                            <TextField\r\n                                error={errors.past_ref ? true : false}\r\n                                id=\"past_ref\"\r\n                                name=\"past_ref\"\r\n                                inputRef={register}\r\n                                label={LetterFormdata.past_ref}\r\n                                fullWidth\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} sm={3}>\r\n                            <TextField\r\n                                error={errors.reg_number ? true : false}\r\n                                id=\"reg_number\"\r\n                                name=\"reg_number\"\r\n                                inputRef={register}\r\n                                label={LetterFormdata.reg_number}\r\n                                fullWidth\r\n                                autoComplete=\"given-name\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={3}>\r\n                            <TextField\r\n                                error={errors.postoffice ? true : false}\r\n                                id=\"postoffice\"\r\n                                name=\"postoffice\"\r\n                                inputRef={register}\r\n                                label={LetterFormdata.postoffice}\r\n                                fullWidth\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                error={errors.letter_title ? true : false}\r\n                                id=\"letter_title\"\r\n                                name=\"letter_title\"\r\n                                inputRef={register}\r\n                                label={LetterFormdata.letter_title}\r\n                                fullWidth\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} sm={3}>\r\n                            <TextField\r\n                                id=\"sender_name\"\r\n                                name=\"sender_name\"\r\n                                inputRef={register}\r\n                                label={LetterFormdata.sender_name}\r\n                                fullWidth\r\n                                error={errors.sender_name ? true : false}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={3}>\r\n                            <TextField\r\n                                id=\"sender_address\"\r\n                                name=\"sender_address\"\r\n                                inputRef={register}\r\n                                label={LetterFormdata.sender_address}\r\n                                fullWidth\r\n                                error={errors.sender_address ? true : false}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={3}>\r\n                            <TextField\r\n\r\n                                id=\"receiver_name\"\r\n                                name=\"receiver_name\"\r\n                                inputRef={register}\r\n                                label={LetterFormdata.receiver_name}\r\n                                fullWidth\r\n                                error={errors.receiver_name ? true : false}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={3}>\r\n                            <TextField\r\n                                id=\"receiver_address\"\r\n                                name=\"receiver_address\"\r\n                                inputRef={register}\r\n                                label={LetterFormdata.receiver_address}\r\n                                fullWidth\r\n                                error={errors.receiver_address ? true : false}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <FormControlLabel\r\n                                control={<Checkbox color=\"secondary\" name=\"attacments\" value={true} inputRef={register} />}\r\n                                label={LetterFormdata.attachments}\r\n                            />\r\n                        </Grid>\r\n                        <Grid container justify=\"flex-end\">\r\n                            <Button\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                size=\"large\"\r\n                                className={classes.button}\r\n                                startIcon={<SaveIcon />}\r\n                            >\r\n                                {LetterFormdata.save}\r\n                            </Button>\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                </form>\r\n            </>\r\n            }\r\n            {/* end form area */}\r\n            {/* upload area */}\r\n            {viewuload &&\r\n                <>\r\n                    <PostalResult {...postaldata}/>\r\n                    <Fileuploadform {...postaldata}/>\r\n                    \r\n                            <Button mt={5}\r\n                                type=\"button\"\r\n                                onClick={closeUploadForm}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                size=\"large\"\r\n                                className={classes.button}\r\n                                startIcon={<CloseIcon />}\r\n                            >\r\n                                {LetterFormdata.finish}\r\n                            </Button>\r\n                        \r\n                    {/* end upload area */}\r\n                </>\r\n            }\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default Letterform\r\n","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\forms\\Emailform.js",["408","409","410","411"],"import React, { useState } from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport { LetterFormdata, Apidata } from '../../data/data'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from 'yup';\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getToken, getId } from '../../utils/Common';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        backgroundColor: '#fff',\r\n        padding: \"30px\"\r\n\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n}));\r\n\r\nfunction Emailform() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const date = new Date();\r\n    const formatedDate = `${date.getMonth() + 1}-${date.getDate()}-${date.getFullYear()}`\r\n\r\n    let emailschema = yup.object().shape({\r\n        past_ref: yup.string(),\r\n        sender_email: yup.string(),\r\n        letter_title: yup.string(),\r\n        sender_name: yup.string(),\r\n        sender_address: yup.string(),\r\n        receiver_name: yup.string(),\r\n        receiver_address: yup.string()\r\n    });\r\n\r\n    const { register, handleSubmit, errors } = useForm({\r\n        validationSchema: emailschema\r\n    });\r\n\r\n    function onSubmit(data) {\r\n        const apipath = Apidata.api;\r\n        const token = getToken();\r\n        const userId = getId();\r\n        setError(null);\r\n        setLoading(true);\r\n        axios.post(apipath + 'v1/postal', {\r\n            postalType: \"EMAIL\",\r\n            receivedDate: data.recived_date,\r\n            letterTitle: data.letter_title,\r\n            email: data.sender_email,\r\n            senderName: data.sender_name,\r\n            senderAddress: data.sender_address,\r\n            receiverName: data.receiver_name,\r\n            receiverAddress: data.receiver_address,\r\n            postalStatus: \"NEW\",\r\n            enteredUserId: userId,\r\n            attachment: data.attacments\r\n        }, { headers: { \"Authorization\": `Bearer ${token}` }})\r\n            .then(response => { \r\n                setLoading(false);\r\n                alert(\"Saved\");\r\n            }).catch(error => {\r\n                setLoading(false);\r\n                alert(error);\r\n                if (error.response.status === 401) setError(error.response.data.message);\r\n                else setError(\"Something went wrong. Please try again later.\");\r\n            });\r\n    }\r\n\r\n    return (\r\n        <Paper className={classes.paper} elevation={5}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                {LetterFormdata.title}\r\n            </Typography>\r\n            <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} sm={3}>\r\n                        <TextField\r\n                            id=\"recived_date\"\r\n                            name=\"recived_date\"\r\n                            inputRef={register}\r\n                            label={LetterFormdata.recived_date}\r\n                            type=\"date\"\r\n                            defaultValue={formatedDate}\r\n                            className={classes.textField}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={3}>\r\n                        <TextField\r\n                            id=\"past_ref\"\r\n                            name=\"past_ref\"\r\n                            inputRef={register}\r\n                            label={LetterFormdata.past_ref}\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            id=\"sender_email\"\r\n                            name=\"sender_email\"\r\n                            inputRef={register}\r\n                            label={LetterFormdata.sender_email}\r\n                            fullWidth\r\n                            autoComplete=\"family-name\"\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            id=\"letter_title\"\r\n                            name=\"letter_title\"\r\n                            inputRef={register}\r\n                            label={LetterFormdata.letter_title}\r\n                            fullWidth\r\n                            autoComplete=\"shipping address-level2\"\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={3}>\r\n                        <TextField\r\n                            id=\"sender_name\"\r\n                            name=\"sender_name\"\r\n                            inputRef={register}\r\n                            label={LetterFormdata.sender_name}\r\n                            fullWidth\r\n                            autoComplete=\"shipping postal-code\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={3}>\r\n                        <TextField\r\n                            id=\"sender_address\"\r\n                            name=\"sender_address\"\r\n                            inputRef={register}\r\n                            label={LetterFormdata.sender_address}\r\n                            fullWidth\r\n                            autoComplete=\"shipping country\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={3}>\r\n                        <TextField\r\n                            id=\"receiver_name\"\r\n                            name=\"receiver_name\"\r\n                            inputRef={register}\r\n                            label={LetterFormdata.receiver_name}\r\n                            fullWidth\r\n                            autoComplete=\"shipping postal-code\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={3}>\r\n                        <TextField\r\n                            required\r\n                            id=\"receiver_address\"\r\n                            name=\"receiver_address\"\r\n                            inputRef={register}\r\n                            label={LetterFormdata.receiver_address}\r\n                            fullWidth\r\n                            autoComplete=\"shipping country\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <FormControlLabel\r\n                            control={<Checkbox color=\"secondary\" name=\"attacments\" value={true} inputRef={register} />}\r\n                            label={LetterFormdata.attachments}\r\n                        />\r\n                    </Grid>\r\n                    <Grid container justify=\"flex-end\">\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"large\"\r\n                            className={classes.button}\r\n                            startIcon={<SaveIcon />}\r\n                            type=\"submit\"\r\n                        >\r\n                            {LetterFormdata.save}\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default Emailform\r\n","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\forms\\Chequeform.js",["412","413","414","415"],"import React, { useState } from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport { LetterFormdata, Apidata } from '../../data/data'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from 'yup';\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getToken, getId } from '../../utils/Common';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        backgroundColor: '#fff',\r\n        padding: \"30px\"\r\n\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n}));\r\n\r\n\r\nfunction Chequeform() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const date = new Date();\r\n\r\n    const formatedDate = `${date.getMonth() + 1}-${date.getDate()}-${date.getFullYear()}`\r\n\r\n    let chequeschema = yup.object().shape({\r\n        cheque_no: yup.string(),\r\n        checkBank: yup.string(),\r\n        chequeAmt: yup.string(),\r\n        letter_title: yup.string(),\r\n        sender_name: yup.string(),\r\n        sender_address: yup.string(),\r\n        receiver_name: yup.string(),\r\n        receiver_address: yup.string()\r\n    });\r\n\r\n    const { register, handleSubmit, errors } = useForm({\r\n        validationSchema: chequeschema\r\n    });\r\n\r\n    function onSubmit(data) {\r\n        const apipath = Apidata.api;\r\n        const token = getToken();\r\n        const userId = getId();\r\n        setError(null);\r\n        setLoading(true);\r\n        axios.post(apipath + 'v1/postal', {\r\n            postalType: \"CHEQUE\",\r\n            receivedDate: data.recived_date,\r\n            letterTitle: data.letter_title,\r\n            chequeNo: data.cheque_no,\r\n            checkBank: data.cheque_bank,\r\n            chequeAmt: data.cheque_amt,\r\n            senderName: data.sender_name,\r\n            senderAddress: data.sender_address,\r\n            receiverName: data.receiver_name,\r\n            receiverAddress: data.receiver_address,\r\n            postalStatus: \"NEW\",\r\n            enteredUserId: userId,\r\n        }, { headers: { \"Authorization\": `Bearer ${token}` } })\r\n            .then(response => {\r\n                setLoading(false);\r\n                alert(\"Saved\");\r\n            }).catch(error => {\r\n                setLoading(false);\r\n                alert(error);\r\n                if (error.response.status === 401) setError(error.response.data.message);\r\n                else setError(\"Something went wrong. Please try again later.\");\r\n            });\r\n    }\r\n\r\n    return (\r\n        <Paper className={classes.paper} elevation={5}>\r\n\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                {LetterFormdata.cheque_title}\r\n            </Typography>\r\n            <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} sm={3}>\r\n                        <TextField\r\n                            id=\"recived_date\"\r\n                            name=\"recived_date\"\r\n                            inputRef={register}\r\n                            label={LetterFormdata.recived_date}\r\n                            type=\"date\"\r\n                            defaultValue={formatedDate}\r\n                            className={classes.textField}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={3}>\r\n                        <TextField\r\n                            id=\"cheque_no\"\r\n                            name=\"cheque_no\"\r\n                            inputRef={register}\r\n                            label={LetterFormdata.cheque_no}\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={3}>\r\n                        <TextField\r\n                            id=\"cheque_bank\"\r\n                            name=\"cheque_bank\"\r\n                            inputRef={register}\r\n                            label={LetterFormdata.cheque_bank}\r\n                            fullWidth\r\n                            autoComplete=\"given-name\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={3}>\r\n                        <TextField\r\n                            id=\"cheque_amt\"\r\n                            name=\"cheque_amt\"\r\n                            inputRef={register}\r\n                            label={LetterFormdata.cheque_amt}\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            id=\"letter_title\"\r\n                            name=\"letter_title\"\r\n                            inputRef={register}\r\n                            label={LetterFormdata.letter_title}\r\n                            fullWidth\r\n                            autoComplete=\"shipping address-level2\"\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={3}>\r\n                        <TextField\r\n                            required\r\n                            id=\"sender_name\"\r\n                            name=\"sender_name\"\r\n                            inputRef={register}\r\n                            label={LetterFormdata.sender_name}\r\n                            fullWidth\r\n                            autoComplete=\"shipping postal-code\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={3}>\r\n                        <TextField\r\n                            required\r\n                            id=\"sender_address\"\r\n                            name=\"sender_address\"\r\n                            inputRef={register}\r\n                            label={LetterFormdata.sender_address}\r\n                            fullWidth\r\n                            autoComplete=\"shipping country\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={3}>\r\n                        <TextField\r\n                            required\r\n                            id=\"receiver_name\"\r\n                            name=\"receiver_name\"\r\n                            inputRef={register}\r\n                            label={LetterFormdata.receiver_name}\r\n                            fullWidth\r\n                            autoComplete=\"shipping postal-code\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={3}>\r\n                        <TextField\r\n                            required\r\n                            id=\"receiver_address\"\r\n                            name=\"receiver_address\"\r\n                            inputRef={register}\r\n                            label={LetterFormdata.receiver_address}\r\n                            fullWidth\r\n                            autoComplete=\"shipping country\"\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid container justify=\"flex-end\">\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"large\"\r\n                            className={classes.button}\r\n                            startIcon={<SaveIcon />}\r\n                            type=\"submit\"\r\n                        >\r\n                            {LetterFormdata.save}\r\n                        </Button>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </form>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default Chequeform\r\n","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\forms\\Faxform.js",["416","417","418","419"],"import React, { useState } from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport { LetterFormdata, Apidata } from '../../data/data'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from 'yup';\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getToken, getId } from '../../utils/Common';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        backgroundColor: '#fff',\r\n        padding: \"30px\"\r\n\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n}));\r\n\r\nfunction Faxform() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const date = new Date();\r\n    const formatedDate = `${date.getMonth() + 1}-${date.getDate()}-${date.getFullYear()}`\r\n\r\n    let faxschema = yup.object().shape({\r\n        past_ref: yup.string(),\r\n        sender_fax: yup.string(),\r\n        letter_title: yup.string(),\r\n        sender_name: yup.string(),\r\n        sender_address: yup.string(),\r\n        receiver_name: yup.string(),\r\n        receiver_address: yup.string()\r\n    });\r\n\r\n    const { register, handleSubmit, errors } = useForm({\r\n        validationSchema: faxschema\r\n    });\r\n\r\n    function onSubmit(data) {\r\n        const apipath = Apidata.api;\r\n        const token = getToken();\r\n        const userId = getId();\r\n        setError(null);\r\n        setLoading(true);\r\n        axios.post(apipath + 'v1/postal', {\r\n            postalType: \"FAX\",\r\n            receivedDate: data.recived_date,\r\n            letterTitle: data.letter_title,\r\n            fax: data.sender_fax,\r\n            senderName: data.sender_name,\r\n            senderAddress: data.sender_address,\r\n            receiverName: data.receiver_name,\r\n            receiverAddress: data.receiver_address,\r\n            postalStatus: \"NEW\",\r\n            enteredUserId: userId,\r\n            attachment: data.attacments\r\n        }, { headers: { \"Authorization\": `Bearer ${token}` } })\r\n            .then(response => {\r\n                setLoading(false);\r\n                alert(\"Saved\");\r\n            }).catch(error => {\r\n                setLoading(false);\r\n                alert(error);\r\n                if (error.response.status === 401) setError(error.response.data.message);\r\n                else setError(\"Something went wrong. Please try again later.\");\r\n            });\r\n    }\r\n    return (\r\n        <Paper className={classes.paper} elevation={5}>\r\n\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                {LetterFormdata.title}\r\n            </Typography>\r\n            <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} sm={3}>\r\n                        <TextField\r\n                            id=\"recived_date\"\r\n                            name=\"recived_date\"\r\n                            inputRef={register}\r\n                            label={LetterFormdata.recived_date}\r\n                            type=\"date\"\r\n                            defaultValue={formatedDate}\r\n                            className={classes.textField}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={3}>\r\n                        <TextField\r\n                            id=\"past_ref\"\r\n                            name=\"past_ref\"\r\n                            inputRef={register}\r\n                            label={LetterFormdata.past_ref}\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={3}>\r\n                        <TextField\r\n                            required\r\n                            id=\"sender_fax\"\r\n                            name=\"sender_fax\"\r\n                            inputRef={register}\r\n                            label={LetterFormdata.sender_fax}\r\n                            fullWidth\r\n                            autoComplete=\"given-name\"\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            required\r\n                            id=\"letter_title\"\r\n                            name=\"letter_title\"\r\n                            inputRef={register}\r\n                            label={LetterFormdata.letter_title}\r\n                            fullWidth\r\n                            autoComplete=\"shipping address-level2\"\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={3}>\r\n                        <TextField\r\n\r\n                            id=\"sender_name\"\r\n                            name=\"sender_name\"\r\n                            inputRef={register}\r\n                            label={LetterFormdata.sender_name}\r\n                            fullWidth\r\n                            autoComplete=\"shipping postal-code\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={3}>\r\n                        <TextField\r\n\r\n                            id=\"sender_address\"\r\n                            name=\"sender_address\"\r\n                            inputRef={register}\r\n                            label={LetterFormdata.sender_address}\r\n                            fullWidth\r\n                            autoComplete=\"shipping country\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={3}>\r\n                        <TextField\r\n\r\n                            id=\"receiver_name\"\r\n                            name=\"receiver_name\"\r\n                            inputRef={register}\r\n                            label={LetterFormdata.receiver_name}\r\n                            fullWidth\r\n                            autoComplete=\"shipping postal-code\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={3}>\r\n                        <TextField\r\n\r\n                            id=\"receiver_address\"\r\n                            name=\"receiver_address\"\r\n                            inputRef={register}\r\n                            label={LetterFormdata.receiver_address}\r\n                            fullWidth\r\n                            autoComplete=\"shipping country\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <FormControlLabel\r\n                            control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\" />}\r\n                            label={LetterFormdata.attachments}\r\n                        />\r\n                    </Grid>\r\n                    <Grid container justify=\"flex-end\">\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"large\"\r\n                            className={classes.button}\r\n                            startIcon={<SaveIcon />}\r\n                            type=\"submit\"\r\n                        >\r\n                            {LetterFormdata.save}\r\n                        </Button>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </form>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default Faxform\r\n","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\data\\data.js",["420","421"],"export const appbardata = {\r\n    sitename:'Postal Management System (EC-PMS)', \r\n    search:'Search',\r\n    dashboard:'Dashboard',\r\n    logout:\"logout\"\r\n};\r\n\r\nexport const Apidata = {\r\n    api:'http://127.0.0.1:5050/'\r\n}\r\n\r\nexport const searchdata = {\r\n    res_id:'Postal ID',\r\n    res_date:'Received Date',\r\n    res_type:'Postal Type',\r\n    res_title:'Letter Title',\r\n    res_sender:'Sender',\r\n    search:'Search',\r\n    advanced_search:\"Advanced Search\"\r\n}\r\n\r\nexport const loginformdata={\r\n    ec:'Election Commission of Sri Lanka',\r\n    pms:'Postal Management System',\r\n    ecpms:'Postal Management System (EC-PMS) ',\r\n    title:'Sign in ',\r\n    username:'User Name',\r\n    password:'Password',\r\n    login:' Sign In',\r\n    username_required:'User Name required',\r\n    password_required:'Password required',\r\n    password_min:'Password must be at least 6 characters',\r\n    new_postal:'New Postal',\r\n    search:'Search'\r\n\r\n}\r\n\r\nexport const Tabsdata ={\r\n    letter:'Letter',\r\n    cheque:'Cheque',\r\n    email:'Email',\r\n    fax:'Fax'\r\n}\r\n\r\nexport const LetterFormdata ={\r\n    close:'Close',\r\n    colse_postal:'Close Postal',\r\n    add_comment:'Add Comment',\r\n    forward_to:'Forward To',\r\n    assign_to:'Assign To',\r\n    forward:'Forward',\r\n    registered_post:'Registered Post',\r\n    normal_post:'Normal Post',\r\n    byhand_post:'By Hand',\r\n    secret:'Secret Letter',\r\n    not_secret:'Not Secret Letter',\r\n    past_ref:'Past reference',\r\n    reg_number:'Registred Post Number',\r\n    postoffice:'Post Office Name',\r\n    posted_date:'Posted Date',\r\n    letter_date:'Letter Date',\r\n    recived_date:'Recived Date',\r\n    sender_name:'Sender Name',\r\n    sender_address:'Sender Address',\r\n    receiver_name:'Receiver Name',\r\n    receiver_address:'Receiver Address',\r\n    upload_file:'Upload File',\r\n    title:'Enter Letter Details',\r\n    cheque_title:'Enter Cheque Details',\r\n    letter_cheque_title:'Title',\r\n    letter_title:'Letter Title',\r\n    attachments:'Attachmenets',\r\n    sender_email:'Sender Email',\r\n    sender_fax:'Sender Fax Number',\r\n    cheque_no:'Cheque Number',\r\n    cheque_amt:'Cheque Amount',\r\n    cheque_bank:'Bank',\r\n    save:\"Save\",\r\n    finish: 'Finish',\r\n    letter_reg_number:'Postal Id',\r\n    upload_file:'Upload File',\r\n    drop_item_here:'Drop image here',\r\n    preview:'Preview',\r\n    assign:\"Assign\",\r\n    postaldetails:\"Postal Details\",\r\n    postalimage:\"Postal Image\",\r\n    comment:\"Comment\",\r\n    complete_before:\"Complete Before\",\r\n    comments:\"Comments\",\r\n    postal_type:\"Postal Type\",\r\n    secret:\"Secret\",\r\n    res_mode:\"Received Mode\"\r\n}\r\n\r\nexport const Aodata = {\r\n    new_postals:'New Postals'\r\n}\r\n\r\nexport const Cgdata = {\r\n    new_postals:'New Postals',\r\n    opened_postals:'Opened Postals',\r\n    closed_postals:'Closed Postals'\r\n}\r\n\r\nexport const Sodata = {\r\n    new_postals:'New Postals',\r\n    open_postals:'Opened Postals',\r\n    closed_postals:'Closed Postals'\r\n}\r\n\r\nexport const Admindata = {\r\n    new_user:'New User',\r\n    new_path:'Opened Path',\r\n}\r\n\r\n","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\headers\\Header.js",["422","423","424","425","426","427","428","429","430","431","432","433","434","435"],"F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\headers\\AppbarLogin.js",["436","437"],"import React from 'react'\r\nimport { appbardata } from '../../data/data'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      backgroundColor: '#4a148c',\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n  }));\r\n\r\nfunction AppbarLogin() {\r\n    const classes = useStyles();\r\n    return (\r\n            <div className={classes.root}>\r\n        <AppBar position=\"static\" className={classes.root}>\r\n          <Toolbar>\r\n            <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n              <MailOutlineIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              {appbardata.sitename}\r\n            </Typography>\r\n           \r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default AppbarLogin\r\n","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\headers\\frontheader.js",["438"],"import React from 'react'\r\n\r\nfunction frontheader() {\r\n    return (\r\n        <nav className=\"main-header navbar navbar-expand navbar-white navbar-light\">\r\n        <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item\">\r\n                <a className=\"nav-link\" data-widget=\"pushmenu\" href=\"#\" role=\"button\"><i className=\"fas fa-bars\" /></a>\r\n            </li>\r\n           \r\n        </ul>\r\n        <form className=\"form-inline ml-3\">\r\n            <div className=\"input-group input-group-sm\">\r\n                <input className=\"form-control form-control-navbar\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                <div className=\"input-group-append\">\r\n                    <button className=\"btn btn-navbar\" type=\"submit\">\r\n                        <i className=\"fas fa-search\" />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n        {/* Right navbar links */}\r\n        \r\n    </nav>\r\n    )\r\n}\r\n\r\nexport default frontheader\r\n","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\Footer\\AppFooter.js",[],"F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\headers\\AppbarFront.js",["439"],"import React from 'react'\r\nimport { appbardata } from '../../data/data'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { Link } from 'react-router-dom';\r\nimport Logout from '../../pages/Logout';\r\nimport LogedUser from '../../components/LogedUser';\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: '#4a148c',\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    links: {\r\n        color: \"#fff\",\r\n\r\n    }\r\n}));\r\n\r\nfunction AppbarFront() {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\" className={classes.root}>\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                        <MailOutlineIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        {appbardata.sitename}\r\n                    </Typography>\r\n                    <Button className={classes.links} component={Link} to=\"/front_search\" variant=\"\" color=\"#fff\">\r\n                        {appbardata.search}\r\n                    </Button>\r\n                    <Logout/>\r\n                    <LogedUser/>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppbarFront\r\n","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\contents\\FrontCont.js",["440","441"],"import React from 'react'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Letterform from '../forms/Letterform';\r\nimport { Tabsdata } from '../../data/data'\r\nimport Chequeform from '../forms/Chequeform';\r\nimport Emailform from '../forms/Emailform';\r\nimport Faxform from '../forms/Faxform';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(4),\r\n        marginLeft: theme.spacing(4),\r\n        marginRight: theme.spacing(4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        backgroundColor: '#000',\r\n        padding: \"30px\"\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: \"#fff\",\r\n      },\r\n}));\r\n\r\nfunction FrontCont() {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            \r\n                <Tabs \r\n                value={value} \r\n                onChange={handleChange} \r\n                textColor=\"#fff\"\r\n                centered\r\n                >\r\n                    <Tab label={Tabsdata.letter} {...a11yProps(0)} />\r\n                    <Tab label={Tabsdata.cheque} {...a11yProps(1)} />\r\n                    <Tab label={Tabsdata.email} {...a11yProps(2)} />\r\n                    <Tab label={Tabsdata.fax} {...a11yProps(3)} />\r\n                </Tabs>\r\n            \r\n            <TabPanel value={value} index={0}>\r\n                <Letterform/>\r\n      </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n                <Chequeform/>\r\n      </TabPanel>\r\n            <TabPanel value={value} index={2}>\r\n                <Emailform/>\r\n      </TabPanel>\r\n      <TabPanel value={value} index={3}>\r\n                <Faxform/>\r\n      </TabPanel>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FrontCont\r\n","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\forms\\Fileuploadform.js",["442","443","444","445","446","447","448"],"import React from 'react'\r\nimport clsx from 'clsx';\r\nimport Container from '@material-ui/core/Container'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { useDropzone } from 'react-dropzone'\r\nimport RootRef from '@material-ui/core/RootRef'\r\nimport { LinearProgress, TextareaAutosize } from '@material-ui/core'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { green } from '@material-ui/core/colors';\r\nimport Button from '@material-ui/core/Button';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { LetterFormdata,Apidata } from '../../data/data'\r\nimport axios from 'axios';\r\nimport { getToken, getId } from '../../utils/Common';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    dropzone: {\r\n        height: 300,\r\n        background: \"#efefef\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        borderStyle: \"dashed\",\r\n        borderColor: \"#aaa\"\r\n    },\r\n    preview: {\r\n        width: 250,\r\n        height: 250,\r\n        margin: \"auto\",\r\n        display: \"block\",\r\n        marginBottom: 16,\r\n        objectFit: \"contain\"\r\n    },\r\n    wrapper: {\r\n        margin: theme.spacing(1),\r\n        position: 'relative',\r\n    },\r\n    buttonSuccess: {\r\n        backgroundColor: green[500],\r\n        '&:hover': {\r\n            backgroundColor: green[700],\r\n        },\r\n    },\r\n    fabProgress: {\r\n        color: green[500],\r\n        position: 'absolute',\r\n        top: -6,\r\n        left: -6,\r\n        zIndex: 1,\r\n    },\r\n    buttonProgress: {\r\n        color: green[500],\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    },\r\n}));\r\n\r\nfunction Fileuploadform(props) {\r\n\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [success, setSuccess] = React.useState(false);\r\n    const [file, setFile] = React.useState();\r\n    const [preview, setPreview] = React.useState();\r\n    const [presentage, setPresentage] = React.useState(0);\r\n\r\n    const timer = React.useRef();\r\n\r\n    const buttonClassname = clsx({\r\n        [classes.buttonSuccess]: success,\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        return () => {\r\n            clearTimeout(timer.current);\r\n        };\r\n    }, []);\r\n\r\n    const handleButtonClick = () => {\r\n        if (!loading) {\r\n            setSuccess(false);\r\n            setLoading(true);\r\n            timer.current = window.setTimeout(() => {\r\n                setSuccess(true);\r\n                setLoading(false);\r\n            }, 2000);\r\n        }\r\n    };\r\n\r\n    const uploadFile = async() => {\r\n        const api = Apidata.api;\r\n        const token = getToken();\r\n        //const token=\"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJmcm9udCIsImlhdCI6MTYwODM1NjgyOCwiZXhwIjoxNjA4NDQzMjI4fQ.lCJJn08EXGwV-0YLirG6q6HcaYRI6gbkaNT4ZBFfGMGkoL58pgz-QF3SK1UyAJ3sEs_dGAoP5IYr6r9kJZ-EYg\"\r\n        const userId = getId();\r\n        setLoading(true);\r\n        try{\r\n            const formData=new FormData();\r\n            formData.append(\"file\",file);\r\n            formData.append(\"postal_id\",props.id);\r\n            const APIURL=api+\"v1/upload\";\r\n            const response = await axios.post(\r\n                APIURL,\r\n                formData,\r\n                { headers: { \"Authorization\": `Bearer ${token}` } },\r\n                {\r\n                onUploadProgress:(progressEvent)=>{\r\n                    const presentCompleted = Math.round(progressEvent.loaded * 100)/progressEvent.total\r\n                    setPresentage(presentCompleted)\r\n                }\r\n            })\r\n            setLoading(false);\r\n            setSuccess(true);\r\n        }catch(err){\r\n            setLoading(false);\r\n            alert(err.message)\r\n        }\r\n\r\n    }\r\n\r\n    const onDrop = React.useCallback((acceptedFiles) => {\r\n        console.log(acceptedFiles)\r\n        setFile(acceptedFiles[0]);\r\n        const previewUrl = URL.createObjectURL(acceptedFiles[0]);\r\n        setPreview(previewUrl);\r\n\r\n    }\r\n    );\r\n    const { getRootProps, getInputProps } = useDropzone(\r\n        {\r\n            multiple: false,\r\n            onDrop,\r\n        });\r\n\r\n    const { ref, ...rootProps } = getRootProps()\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Container maxWidth=\"md\">\r\n                <Paper elevation={0}>\r\n                    <Grid container >\r\n                        <Grid item xs={12}>\r\n                            <Typography align=\"center\" style={{ padding: 5 }}>\r\n                                {LetterFormdata.upload_file}\r\n                        </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={6} style={{ padding: 16 }}>\r\n                            <RootRef rootRef={ref}>\r\n                                <Paper {...rootProps} className={classes.dropzone}>\r\n                                    <input {...getInputProps()} />\r\n                                    {LetterFormdata.drop_item_here}\r\n                                </Paper>\r\n                            </RootRef>\r\n                        </Grid>\r\n                        <Grid item xs={6} style={{ padding: 16 }}>\r\n                            <Typography align=\"center\" variant=\"subtitle1\">\r\n                            {LetterFormdata.preview}\r\n                            </Typography>\r\n                            <img\r\n                                onLoad={() => URL.revokeObjectURL(preview)}\r\n                                className={classes.preview}\r\n                                src={preview || \"https://via.placeholder.com/250\"}\r\n                            />\r\n                            <Divider />\r\n                            {/* */}\r\n                            {file && <><Grid container style={{ marginTop: 16 }} alignItems=\"center\" >\r\n                                <div className={classes.wrapper}>\r\n                                    <Fab\r\n                                        aria-label=\"save\"\r\n                                        color=\"primary\"\r\n                                        className={buttonClassname}\r\n                                        onClick={uploadFile}\r\n                                    >\r\n                                        {success ? <CheckIcon /> : <SaveIcon />}\r\n                                    </Fab>\r\n                                    {loading && <CircularProgress size={68} className={classes.fabProgress} />}\r\n                                </div>\r\n                            </Grid>\r\n                            <Grid item={10}>\r\n                                {file && <Typography variant=\"body\">{file.name} </Typography>}\r\n                                <div>\r\n                                    <LinearProgress variant=\"determinate\" value={presentage} />\r\n                                </div>\r\n                                <div align=\"center\" justifyContent=\"center\">\r\n                                    <Typography variant=\"body\">{presentage}%</Typography>\r\n                                </div>\r\n                            </Grid></>}\r\n                          {/* */}\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </Container>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Fileuploadform\r\n\r\n","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\Resultview\\PostalResult.js",[],["449","450"],"F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\pages\\FrontSearch.js",["451","452","453","454"],"import React from 'react'\r\nimport { getId, getRoles, getToken, getUsername } from '../utils/Common';\r\nimport Footer from '../components/Footer/AppFooter'\r\nimport AppbarFrontSearch from '../components/headers/AppbarFrontSearch';\r\nimport Content from '../components/contents/FrontSearchContent'\r\n\r\n\r\nfunction FrontSearch() {\r\n\r\n    const id = getId();\r\n    const token = getToken();\r\n    const roles = getRoles();\r\n    const username = getUsername();\r\n\r\n    return (\r\n        <>\r\n            <AppbarFrontSearch/>\r\n            <div align=\"center\" >\r\n            <Content/>\r\n            </div>\r\n            \r\n            <Footer/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FrontSearch\r\n","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\contents\\FrontSearchContent.js",["455","456","457","458","459","460"],"import React, { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { searchdata, Apidata } from '../../data/data'\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport Pageview from '@material-ui/icons/Pageview';\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getToken, getId } from '../../utils/Common';\r\nimport Moment from 'moment';\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n    paper: {\r\n        marginTop: 10,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        maxWidth: 900,\r\n    }\r\n});\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n    return { name, calories, fat, carbs, protein };\r\n}\r\n\r\n\r\n\r\nconst rows = [\r\n    \r\n];\r\n\r\nfunction FrontSearchContent() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [postalList, setPostalList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        loadApiData();\r\n        return () => {\r\n            \r\n        }\r\n    }, [])\r\n\r\n    function loadApiData() {\r\n        const apipath = Apidata.api;\r\n        const token = getToken();\r\n        \r\n        // display form data on success\r\n        setError(null);\r\n        setLoading(true);\r\n        axios.get(apipath +'v1/postal/new', { headers: { \"Authorization\": `Bearer ${token}`} })\r\n        .then(response => {\r\n            const result = response.data;\r\n            console.log(result);\r\n            setPostalList(result);\r\n            setLoading(false);\r\n        }).catch(error => {\r\n            setLoading(false);\r\n            if (error.response.status === 401) setError(error.response.data.message);\r\n            else setError(\"Something went wrong. Please try again later.\");\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Paper className={classes.paper} elevation={5}>\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n\r\n                            <TableCell >{searchdata.res_title}</TableCell>\r\n                            <TableCell align=\"right\">{searchdata.res_sender}</TableCell>\r\n                            <TableCell align=\"right\">{searchdata.res_type}</TableCell>\r\n                            <TableCell align=\"right\">{searchdata.res_id}</TableCell>\r\n                            <TableCell align=\"right\">{searchdata.res_date}</TableCell>\r\n                            <TableCell></TableCell>\r\n                            <TableCell></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        \r\n                        {postalList.map((postal) => (\r\n                            <TableRow key={postal.id}>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {postal.letterTitle}\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">{postal.senderName}</TableCell>\r\n                                <TableCell align=\"right\">{postal.postalType}</TableCell>\r\n                                <TableCell align=\"right\">{postal.id}</TableCell>\r\n                                <TableCell align=\"right\">{Moment(postal.receivedDate).format('YYYY-MM-DD')}</TableCell>\r\n                                <TableCell><Edit/></TableCell>\r\n                                 <TableCell><Pageview/></TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default FrontSearchContent\r\n","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\headers\\AppbarFrontSearch.js",["461"],"import React from 'react'\r\nimport { appbardata } from '../../data/data'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { Link } from 'react-router-dom';\r\nimport Logout from '../../pages/Logout';\r\nimport LogedUser from '../../components/LogedUser';\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: '#4a148c',\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    links: {\r\n        color: \"#fff\",\r\n\r\n    }\r\n}));\r\n\r\n\r\nfunction AppbarFrontSearch() {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\" className={classes.root}>\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                        <MailOutlineIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        {appbardata.sitename}\r\n                    </Typography>\r\n                    <Button className={classes.links} component={Link} to=\"/front_dashboard\" variant=\"\" color=\"#fff\">\r\n                        {appbardata.dashboard}\r\n                    </Button>\r\n                    <Logout/>\r\n                    <LogedUser/>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppbarFrontSearch\r\n","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\headers\\AppbarAo.js",["462"],"import React from 'react'\r\nimport { appbardata } from '../../data/data'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { Link } from 'react-router-dom';\r\nimport Logout from '../../pages/Logout';\r\nimport LogedUser from '../../components/LogedUser';\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: '#4a148c',\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    links: {\r\n        color: \"#fff\",\r\n\r\n    }\r\n}));\r\n\r\nfunction AppbarAo() {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\" className={classes.root}>\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                        <MailOutlineIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        {appbardata.sitename}\r\n                    </Typography>\r\n                    <Button className={classes.links} component={Link} to=\"/ao_search\" variant=\"\" color=\"#fff\">\r\n                        {appbardata.search}\r\n                    </Button>\r\n                    <Logout/>\r\n                    <LogedUser/>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppbarAo\r\n","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\headers\\AppbarAoSearch.js",["463"],"import React from 'react'\r\nimport { appbardata } from '../../data/data'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { Link } from 'react-router-dom';\r\nimport Logout from '../../pages/Logout';\r\nimport LogedUser from '../../components/LogedUser';\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: '#4a148c',\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    links: {\r\n        color: \"#fff\",\r\n\r\n    }\r\n}));\r\n\r\n\r\nfunction AppbarAoSearch() {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\" className={classes.root}>\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                        <MailOutlineIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        {appbardata.sitename}\r\n                    </Typography>\r\n                    <Button className={classes.links} component={Link} to=\"/ao_dashboard\" variant=\"\" color=\"#fff\">\r\n                        {appbardata.dashboard}\r\n                    </Button>\r\n                    <Logout/>\r\n                    <LogedUser/>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppbarAoSearch\r\n","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\pages\\AoSearch.js",["464","465","466","467"],"import React from 'react'\r\nimport { getId, getRoles, getToken, getUsername } from '../utils/Common';\r\nimport Footer from '../components/Footer/AppFooter'\r\nimport AppbarAoSearch from '../components/headers/AppbarAoSearch';\r\nimport AoSearchContent from '../components/contents/AoSearchContent';\r\nimport { PostalProvider } from '../context/PostalContext'\r\n\r\n\r\nfunction AoSearch() {\r\n\r\n    const id = getId();\r\n    const token = getToken();\r\n    const roles = getRoles();\r\n    const username = getUsername();\r\n\r\n    return (\r\n        <>\r\n            <AppbarAoSearch />\r\n            <div align=\"center\" >\r\n                <PostalProvider>\r\n                    <AoSearchContent />\r\n                </PostalProvider>\r\n            </div>\r\n\r\n            <Footer />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AoSearch\r\n","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\contents\\AoSearchContent.js",["468","469","470","471","472","473","474","475"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { searchdata, Apidata } from '../../data/data'\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport Pageview from '@material-ui/icons/Pageview';\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getToken, getId } from '../../utils/Common';\r\nimport Moment from 'moment';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport * as yup from 'yup';\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n    paper: {\r\n        marginTop: 10,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        maxWidth: 900,\r\n    }\r\n});\r\n\r\n\r\nexport default function AoSearchContent() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [postalList, setPostalList] = useState([]);\r\n    const [advanceSearch, setAdvanceSearch] = useState(false);\r\n    const [simpleSearch, setSimpleSearch] = useState(true);\r\n    const [result, setResult] = useState(true);\r\n\r\n    const [state, setState] = React.useState({\r\n        checkedA: false,\r\n    });\r\n    const handleChange = (event) => {\r\n        if (event.target.name == 'checkedA') {\r\n            setAdvanceSearch(!advanceSearch)\r\n        }\r\n\r\n        setState({\r\n            ...state, [event.target.name]: event.target.checked\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        //loadApiData();\r\n        return () => {\r\n\r\n        }\r\n    }, [])\r\n\r\n    let searchschema = yup.object().shape({\r\n        key1: yup.string().required(),\r\n    });\r\n\r\n    const { register, handleSubmit, errors } = useForm({\r\n        validationSchema: searchschema\r\n    });\r\n\r\n\r\n    function onSubmit(data) {\r\n        const apipath = Apidata.api;\r\n        const token = getToken();\r\n        setError(null);\r\n        setLoading(true);\r\n        axios.get(apipath + 'v1/postal/search',\r\n            { headers: { \"Authorization\": `Bearer ${token}` }, params: { key1: data.key1 } })\r\n            .then(response => {\r\n                setResult(true);\r\n                const result = response.data;\r\n                console.log(result);\r\n                setPostalList(result);\r\n                setLoading(false);\r\n            }).catch(error => {\r\n                setResult(false);\r\n                setPostalList();\r\n                setLoading(false);\r\n                //alert(error);\r\n                // if (error.response.status === 401) setError(error.response.data.message);\r\n                // else setError(\"Something went wrong. Please try again later.\");\r\n            });\r\n    }\r\n    return (\r\n        <>\r\n\r\n            {\r\n                simpleSearch &&\r\n                <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\r\n                    <Paper className={classes.paper} elevation={5}>\r\n\r\n                        <Grid container>\r\n                            <Grid item xs={12} sm={9} style={{ paddingLeft: 30, paddingTop: 30 }} >\r\n                                <Typography variant='h6' align='left'>\r\n                                    {searchdata.search}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={3} style={{ paddingLeft: 30, paddingTop: 30 }} >\r\n\r\n                                {searchdata.advanced_search}\r\n\r\n                                <Switch\r\n                                    checked={state.checkedA}\r\n                                    onChange={handleChange}\r\n                                    name=\"checkedA\"\r\n                                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                />\r\n\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={9} style={{ paddingLeft: 30, paddingTop: 10, paddingBottom: 20 }} >\r\n                                <TextField\r\n                                    //error={errors.letter_title ? true : false}\r\n                                    id=\"key1\"\r\n                                    name=\"key1\"\r\n                                    inputRef={register}\r\n                                    //inputRef={register}\r\n                                    label={searchdata.search}\r\n                                    fullWidth\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={3} sm={3} style={{ paddingTop: 15, paddingBottom: 20 }}>\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size=\"large\"\r\n                                    className={classes.button}\r\n                                    startIcon={<SearchIcon />}\r\n                                >\r\n                                    {searchdata.search}\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                    </Paper>\r\n                </form>\r\n            }\r\n            {/* Advanced search*/}\r\n            {\r\n                advanceSearch &&\r\n                <Paper className={classes.paper} elevation={5}>\r\n                    <form>\r\n                        <Grid container style={{ paddingRight: 30 }}>\r\n                            <Grid item xs={12} sm={12} style={{ paddingLeft: 30, paddingTop: 30 }} >\r\n                                <Typography variant='h6' align='left'>\r\n                                    {searchdata.advanced_search}\r\n                                </Typography>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={3} style={{ paddingLeft: 30, paddingTop: 10, paddingBottom: 20 }} >\r\n                                <TextField\r\n                                    //error={errors.letter_title ? true : false}\r\n                                    id=\"letter_title\"\r\n                                    name=\"letter_title\"\r\n                                    //inputRef={register}\r\n                                    label={searchdata.search}\r\n                                    fullWidth\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={3} style={{ paddingLeft: 30, paddingTop: 10, paddingBottom: 20 }} >\r\n                                <TextField\r\n                                    //error={errors.letter_title ? true : false}\r\n                                    id=\"letter_title\"\r\n                                    name=\"letter_title\"\r\n                                    //inputRef={register}\r\n                                    label={searchdata.search}\r\n                                    fullWidth\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={3} style={{ paddingLeft: 30, paddingTop: 10, paddingBottom: 20 }} >\r\n                                <TextField\r\n                                    //error={errors.letter_title ? true : false}\r\n                                    id=\"letter_title\"\r\n                                    name=\"letter_title\"\r\n                                    //inputRef={register}\r\n                                    label={searchdata.search}\r\n                                    fullWidth\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={3} style={{ paddingLeft: 30, paddingTop: 10, paddingBottom: 20 }} >\r\n                                <TextField\r\n                                    //error={errors.letter_title ? true : false}\r\n                                    id=\"letter_title\"\r\n                                    name=\"letter_title\"\r\n                                    //inputRef={register}\r\n                                    label={searchdata.search}\r\n                                    fullWidth\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={9} style={{ paddingLeft: 30, paddingTop: 10, paddingBottom: 20 }} >\r\n\r\n                            </Grid>\r\n                            <Grid item xs={3} sm={3} style={{ paddingTop: 15, paddingBottom: 20 }}>\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size=\"large\"\r\n                                    className={classes.button}\r\n                                    startIcon={<SearchIcon />}\r\n                                >\r\n                                    {searchdata.search}\r\n                                </Button>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                    </form>\r\n                </Paper>\r\n\r\n            }\r\n            {/* End Advanced search*/}\r\n            <Paper className={classes.paper} elevation={5}>\r\n                <TableContainer component={Paper}>\r\n                    <Table className={classes.table} aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n\r\n                                <TableCell >{searchdata.res_title}</TableCell>\r\n                                <TableCell align=\"right\">{searchdata.res_sender}</TableCell>\r\n                                <TableCell align=\"right\">{searchdata.res_type}</TableCell>\r\n                                <TableCell align=\"right\">{searchdata.res_id}</TableCell>\r\n                                <TableCell align=\"right\">{searchdata.res_date}</TableCell>\r\n                                <TableCell></TableCell>\r\n                                <TableCell></TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        \r\n                            < TableBody >\r\n                                {\r\n                                    postalList.map((postal) => (\r\n                                        <TableRow key={postal.id}>\r\n                                            <TableCell component=\"th\" scope=\"row\">\r\n                                                {postal.letterTitle}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\">{postal.senderName}</TableCell>\r\n                                            <TableCell align=\"right\">{postal.postalType}</TableCell>\r\n                                            <TableCell align=\"right\">{postal.id}</TableCell>\r\n                                            <TableCell align=\"right\">{Moment(postal.receivedDate).format('YYYY-MM-DD')}</TableCell>\r\n                                            <TableCell><Edit /></TableCell>\r\n                                            <TableCell><Pageview /></TableCell>\r\n                                        </TableRow>\r\n                                    ))\r\n                                }\r\n                            </TableBody>\r\n                        \r\n                        \r\n                    </Table>\r\n                </TableContainer>\r\n            </Paper>\r\n        </>\r\n    )\r\n}\r\n","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\pages\\AoPostalDetails.js",["476","477","478","479"],"import React from 'react'\r\nimport { getId, getRoles, getToken, getUsername } from '../utils/Common';\r\nimport Footer from '../components/Footer/AppFooter'\r\nimport AppbarAo from '../components/headers/AppbarAo'\r\nimport AoDetailContent from '../components/contents/AoDetailContent'\r\nimport { PostalProvider } from '../context/PostalContext'\r\n\r\nfunction AoPostalDetails() {\r\n    return (\r\n        <>\r\n            <AppbarAo />\r\n            <div align=\"center\" >\r\n                <PostalProvider>\r\n                    <AoDetailContent />\r\n                </PostalProvider>\r\n            </div>\r\n            <Footer />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AoPostalDetails\r\n","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\contents\\AoDetailContent.js",["480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Apidata, LetterFormdata } from '../../data/data'\r\nimport axios from 'axios';\r\nimport { useHistory, useParams, useLocation } from \"react-router-dom\";\r\nimport { getToken, getId, getUsers } from '../../utils/Common';\r\nimport Moment from 'moment';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport * as yup from 'yup';\r\nimport { useForm } from \"react-hook-form\";\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { PostalContext } from '../../context/PostalContext';\r\nimport Comments from '../contents/Comments';\r\nimport Select from 'react-select'\r\nimport ArrowForward from '@material-ui/icons/ArrowForward'\r\nimport Save from '@material-ui/icons/Save'\r\n\r\nimport CommentFileuploadform from '../forms/CommentForm';\r\nimport AssignForm from '../forms/AssignForm';\r\nimport FormModel from '../models/FormModel';\r\nimport CloseForm from '../forms/CloseForm';\r\nimport ImageComponent from '../../img/ImageComponent';\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n    paper: {\r\n        marginTop: 10,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        maxWidth: 900,\r\n    },\r\n    preview: {\r\n        width: 700,\r\n        height: 700,\r\n        margin: \"auto\",\r\n        display: \"block\",\r\n        marginBottom: 16,\r\n        objectFit: \"contain\"\r\n    },\r\n});\r\n\r\n\r\nexport default function AoDetailContent() {\r\n    let data = useLocation();\r\n    const { postals } = useContext(PostalContext);\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [postalList, setPostalList] = useState([]);\r\n    const [advanceSearch, setAdvanceSearch] = useState(false);\r\n    const [simpleSearch, setSimpleSearch] = useState(true);\r\n    const [result, setResult] = useState(true);\r\n    const [postal, setPostal] = useState(data.state);\r\n    const [opt, setOpt] = useState();\r\n    \r\n    function hanndleAssigned() {\r\n        history.push(\"/ao_dashboard\");\r\n    }\r\n\r\n    const [state, setState] = React.useState({\r\n        checkedA: false,\r\n    });\r\n    const handleChange = (event) => {\r\n        if (event.target.name == 'checkedA') {\r\n            setAdvanceSearch(!advanceSearch)\r\n        }\r\n\r\n        setState({\r\n            ...state, [event.target.name]: event.target.checked\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        const users = getUsers();\r\n\r\n        const options = [];\r\n        JSON.parse(users).map((u) => (\r\n            options.push(\r\n                { value: u.id, label: u.fullName + ' (' + u.position + ' )' }\r\n            )\r\n        )\r\n        );\r\n        setOpt(options);\r\n\r\n\r\n        return () => {\r\n        }\r\n    }, [])\r\n\r\n    let searchschema = yup.object().shape({\r\n        key1: yup.string().required(),\r\n    });\r\n\r\n    const { register, handleSubmit, errors } = useForm({\r\n        validationSchema: searchschema\r\n    });\r\n\r\n\r\n    function onSubmitAssign(data) {\r\n        alert(data);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Grid container style={{ padding: 20 }}>\r\n                <Grid item xs={12} sm={7} style={{ marginLeft: 40 }}>\r\n                    <Paper className={classes.paper} elevation={5} style={{ padding: 20 }}>\r\n\r\n                        <Grid container>\r\n\r\n                            <Grid item xs={12} sm={12}>\r\n                                <Typography variant='h6' align='left'>\r\n                                    {LetterFormdata.postaldetails}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12}>\r\n                                <Typography variant='body1' align='left'>\r\n                                    {LetterFormdata.letter_reg_number + \" : \"}<span style={{ color: '#6d1b7b' }}> {postal.id}</span>\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12}>\r\n                                <Typography variant='body1' align='left'>\r\n                                    {LetterFormdata.letter_cheque_title}<span style={{ color: '#6d1b7b' }}> {postal.letterTitle}</span>\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12}>\r\n                                <Typography variant='body1' align='left'>\r\n                                    {LetterFormdata.postal_type}<span style={{ color: '#6d1b7b' }}> {postal.postalType}</span>\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12}>\r\n                                <Typography variant='body1' align='left'>\r\n                                    {LetterFormdata.res_mode}<span style={{ color: '#6d1b7b' }}> {postal.receivedMode}</span>\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12}>\r\n                                <Typography variant='body1' align='left'>\r\n                                    {LetterFormdata.past_ref}<span style={{ color: '#6d1b7b' }}> {postal.pastRefNo}</span>\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12}>\r\n                                <Typography variant='body1' align='left'>\r\n                                    {LetterFormdata.recived_date}<span style={{ color: '#6d1b7b' }}> {Moment(postal.receivedDate).format('YYYY-MM-DD')}</span>\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12}>\r\n                                <Typography variant='body1' align='left'>\r\n                                    {LetterFormdata.sender_name}<span style={{ color: '#6d1b7b' }}> {postal.senderName}</span>\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12}>\r\n                                <Typography variant='body1' align='left'>\r\n                                    {LetterFormdata.sender_address}<span style={{ color: '#6d1b7b' }}> {postal.senderAddress}</span>\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12}>\r\n                                <Typography variant='body1' align='left'>\r\n                                    {LetterFormdata.receiver_name}<span style={{ color: '#6d1b7b' }}> {postal.receiverName}</span>\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12}>\r\n                                <Typography variant='body1' align='left'>\r\n                                    {LetterFormdata.receiver_address}<span style={{ color: '#6d1b7b' }}> {postal.receiverAddress}</span>\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                    </Paper>\r\n                    <Paper className={classes.paper} elevation={5} style={{ padding: 20 }}>\r\n\r\n                        <Grid container>\r\n                            <Grid item xs={12} sm={12}>\r\n                                <Typography variant='h6' align='left'>\r\n                                    {LetterFormdata.postalimage}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12}>\r\n                                {\r\n                               // <img\r\n                               //     src={process.env.PUBLIC_URL + '/docs/jass.jpg'}\r\n                               //     className={classes.preview}\r\n                               // />\r\n                                }\r\n                                {postal.fileName &&  <ImageComponent fileName={postal.fileName}/>}\r\n                               \r\n                            </Grid>\r\n                        </Grid>\r\n                    </Paper>\r\n\r\n                </Grid>\r\n                <Grid item xs={12} sm={4} style={{ marginLeft: 10 }}>\r\n\r\n                    <AssignForm\r\n                        opt={opt}\r\n                        movetype=\"NEW\"\r\n                        postalid={postal.id}\r\n                        onChange={hanndleAssigned} />\r\n\r\n                    <CloseForm\r\n                        movetype=\"CLOSE\"\r\n                        postalid={postal.id}\r\n                        onChange={hanndleAssigned} />\r\n\r\n                    <Paper className={classes.paper} elevation={5} style={{ padding: 20 }}>\r\n\r\n                        <Grid container>\r\n                            <Grid item xs={12} sm={12}>\r\n                                <Typography variant='h6' align='left'>\r\n                                    {LetterFormdata.comments}\r\n                                </Typography>\r\n                               \r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12}  style={{ marginTop: 10 }}>\r\n                                <Comments postalId={postal.id}/>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                        \r\n                    </Paper>\r\n\r\n                </Grid>\r\n\r\n\r\n\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\headers\\AppbarSo.js",["511"],"import React from 'react'\r\nimport { appbardata } from '../../data/data'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { Link } from 'react-router-dom';\r\nimport Logout from '../../pages/Logout';\r\nimport LogedUser from '../../components/LogedUser';\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: '#4a148c',\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    links: {\r\n        color: \"#fff\",\r\n\r\n    }\r\n}));\r\n\r\nfunction AppbarSo() {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\" className={classes.root}>\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                        <MailOutlineIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        {appbardata.sitename}\r\n                    </Typography>\r\n                    <Button className={classes.links} component={Link} to=\"/so_search\" variant=\"\" color=\"#fff\">\r\n                        {appbardata.search}\r\n                    </Button>\r\n                    <Logout/>\r\n                    <LogedUser/>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppbarSo\r\n","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\pages\\CgPostalDetails.js",["512","513","514","515"],"import React from 'react'\r\nimport { getId, getRoles, getToken, getUsername } from '../utils/Common';\r\nimport Footer from '../components/Footer/AppFooter'\r\nimport AppbarCg from '../components/headers/AppbarCg'\r\nimport CgDetailContent from '../components/contents/CgDetailContent'\r\n\r\nfunction CgPostalDetails() {\r\n    return (\r\n        <>\r\n            <AppbarCg />\r\n            <div align=\"center\" >\r\n                <CgDetailContent />\r\n            </div>\r\n            <Footer />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CgPostalDetails\r\n","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\contents\\CgDetailContent.js",["516","517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","540"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { searchdata, Apidata, LetterFormdata } from '../../data/data'\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport Pageview from '@material-ui/icons/Pageview';\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getToken, getId } from '../../utils/Common';\r\nimport Moment from 'moment';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\n//import Select from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport * as yup from 'yup';\r\nimport { useForm } from \"react-hook-form\";\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n    paper: {\r\n        marginTop: 10,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        maxWidth: 900,\r\n    },\r\n    preview: {\r\n        width: 700,\r\n        height: 700,\r\n        margin: \"auto\",\r\n        display: \"block\",\r\n        marginBottom: 16,\r\n        objectFit: \"contain\"\r\n    },\r\n});\r\n\r\n\r\nexport default function CgDetailContent() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [postalList, setPostalList] = useState([]);\r\n    const [advanceSearch, setAdvanceSearch] = useState(false);\r\n    const [simpleSearch, setSimpleSearch] = useState(true);\r\n    const [result, setResult] = useState(true);\r\n\r\n    const [state, setState] = React.useState({\r\n        checkedA: false,\r\n    });\r\n    const handleChange = (event) => {\r\n        if (event.target.name == 'checkedA') {\r\n            setAdvanceSearch(!advanceSearch)\r\n        }\r\n\r\n        setState({\r\n            ...state, [event.target.name]: event.target.checked\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        //loadApiData();\r\n        return () => {\r\n\r\n        }\r\n    }, [])\r\n\r\n    let searchschema = yup.object().shape({\r\n        key1: yup.string().required(),\r\n    });\r\n\r\n    const { register, handleSubmit, errors } = useForm({\r\n        validationSchema: searchschema\r\n    });\r\n\r\n\r\n    function onSubmit(data) {\r\n        const apipath = Apidata.api;\r\n        const token = getToken();\r\n        setError(null);\r\n        setLoading(true);\r\n        axios.get(apipath + 'v1/postal/search',\r\n            { headers: { \"Authorization\": `Bearer ${token}` }, params: { key1: data.key1 } })\r\n            .then(response => {\r\n                setResult(true);\r\n                const result = response.data;\r\n                console.log(result);\r\n                setPostalList(result);\r\n                setLoading(false);\r\n            }).catch(error => {\r\n                setResult(false);\r\n                setPostalList();\r\n                setLoading(false);\r\n                //alert(error);\r\n                // if (error.response.status === 401) setError(error.response.data.message);\r\n                // else setError(\"Something went wrong. Please try again later.\");\r\n            });\r\n    }\r\n    return (\r\n        <>\r\n            <Grid container style={{ padding: 20 }}>\r\n                <Grid item xs={12} sm={7} style={{ marginLeft: 40 }}>\r\n                    <Paper className={classes.paper} elevation={5} style={{ padding: 20 }}>\r\n\r\n                        <Grid container>\r\n\r\n                            <Grid item xs={12} sm={12}>\r\n                                <Typography variant='h6' align='left'>\r\n                                    {LetterFormdata.postaldetails}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12}>\r\n                                <Typography variant='body1' align='left'>\r\n                                    {LetterFormdata.letter_reg_number}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12}>\r\n                                <Typography variant='body1' align='left'>\r\n                                    {LetterFormdata.letter_cheque_title}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12}>\r\n                                <Typography variant='body1' align='left'>\r\n                                    {LetterFormdata.postal_type}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12}>\r\n                                <Typography variant='body1' align='left'>\r\n                                    {LetterFormdata.res_mode}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12}>\r\n                                <Typography variant='body1' align='left'>\r\n                                    {LetterFormdata.past_ref}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12}>\r\n                                <Typography variant='body1' align='left'>\r\n                                    {LetterFormdata.recived_date}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12}>\r\n                                <Typography variant='body1' align='left'>\r\n                                    {LetterFormdata.sender_name}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12}>\r\n                                <Typography variant='body1' align='left'>\r\n                                    {LetterFormdata.sender_address}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12}>\r\n                                <Typography variant='body1' align='left'>\r\n                                    {LetterFormdata.receiver_name}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12}>\r\n                                <Typography variant='body1' align='left'>\r\n                                    {LetterFormdata.receiver_address}\r\n                                </Typography>\r\n                            </Grid>\r\n\r\n\r\n\r\n                        </Grid>\r\n\r\n                    </Paper>\r\n                    <Paper className={classes.paper} elevation={5} style={{ padding: 20 }}>\r\n\r\n                        <Grid container>\r\n                            <Grid item xs={12} sm={12}>\r\n                                <Typography variant='h6' align='left'>\r\n                                    {LetterFormdata.postalimage}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12}>\r\n                            <img\r\n                                //onLoad={() => URL.revokeObjectURL(preview)}\r\n                                className={classes.preview}\r\n                                src={ \"https://via.placeholder.com/250\"}\r\n                            />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={12} sm={4} style={{ marginLeft: 10 }}>\r\n\r\n                    <Paper className={classes.paper} elevation={5} style={{ padding: 20 }}>\r\n                        <Grid container>\r\n                            <Grid item xs={12} sm={12} style={{ marginBottom: 30 }}>\r\n                                <Typography variant='h6' align='left'>\r\n                                    {LetterFormdata.assign}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12}>\r\n                                <TextField\r\n                                    error={errors.past_ref ? true : false}\r\n                                    id=\"past_ref\"\r\n                                    name=\"past_ref\"\r\n                                    inputRef={register}\r\n                                    label={LetterFormdata.comment}\r\n                                    fullWidth\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12}>\r\n                                <TextField\r\n                                    error={errors.past_ref ? true : false}\r\n                                    id=\"past_ref\"\r\n                                    name=\"past_ref\"\r\n                                    inputRef={register}\r\n                                    label={LetterFormdata.comment}\r\n                                    fullWidth\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} style={{ marginTop: 30 }}>\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size=\"large\"\r\n                                    className={classes.button}\r\n                                    startIcon={<SaveIcon />}\r\n                                >\r\n                                    {LetterFormdata.save}\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Paper>\r\n\r\n                    <Paper className={classes.paper} elevation={5} style={{ padding: 20 }}>\r\n                        <Grid container>\r\n                            <Grid item xs={12} sm={12} style={{ marginBottom: 30 }}>\r\n                                <Typography variant='h6' align='left'>\r\n                                    {LetterFormdata.comments}\r\n                                </Typography>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                    </Paper>\r\n\r\n                </Grid>\r\n\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\headers\\AppbarCg.js",["541"],"import React from 'react'\r\nimport { appbardata } from '../../data/data'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { Link } from 'react-router-dom';\r\nimport Logout from '../../pages/Logout';\r\nimport LogedUser from '../../components/LogedUser';\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: '#4a148c',\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    links: {\r\n        color: \"#fff\",\r\n\r\n    }\r\n}));\r\n\r\nfunction AppbarCg() {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\" className={classes.root}>\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                        <MailOutlineIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        {appbardata.sitename}\r\n                    </Typography>\r\n                    <Button className={classes.links} component={Link} to=\"/ao_search\" variant=\"\" color=\"#fff\">\r\n                        {appbardata.search}\r\n                    </Button>\r\n                    <Logout/>\r\n                    <LogedUser/>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppbarCg\r\n","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\pages\\SoPostalDetails.js",["542","543","544","545"],"import React from 'react'\r\nimport { getId, getRoles, getToken, getUsername } from '../utils/Common';\r\nimport Footer from '../components/Footer/AppFooter'\r\nimport AppbarSo from '../components/headers/AppbarSo'\r\nimport SoDetailContent from '../components/contents/SoDetailContent'\r\n\r\nfunction SoPostalDetails() {\r\n    return (\r\n        <>\r\n            <AppbarSo />\r\n            <div align=\"center\" >\r\n                <SoDetailContent />\r\n            </div>\r\n            <Footer />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SoPostalDetails\r\n","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\contents\\SoDetailContent.js",["546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","576","577"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Apidata, LetterFormdata } from '../../data/data'\r\nimport axios from 'axios';\r\nimport { useHistory, useParams, useLocation } from \"react-router-dom\";\r\nimport { getToken, getId, getUsers } from '../../utils/Common';\r\nimport Moment from 'moment';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport * as yup from 'yup';\r\nimport { useForm } from \"react-hook-form\";\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { PostalContext } from '../../context/PostalContext';\r\nimport Comments from '../contents/Comments';\r\nimport LetterPath from '../contents/LetterPath'\r\nimport Select from 'react-select'\r\nimport ArrowForward from '@material-ui/icons/ArrowForward'\r\nimport Save from '@material-ui/icons/Save'\r\n\r\nimport CommentFileuploadform from '../forms/CommentForm';\r\nimport AssignForm from '../forms/AssignForm';\r\nimport Workassign from '../forms/Workassign';\r\nimport FormModel from '../models/FormModel';\r\nimport CloseForm from '../forms/CloseForm';\r\nimport ImageComponent from '../../img/ImageComponent';\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n    paper: {\r\n        marginTop: 10,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        maxWidth: 900,\r\n    },\r\n    preview: {\r\n        width: 700,\r\n        height: 700,\r\n        margin: \"auto\",\r\n        display: \"block\",\r\n        marginBottom: 16,\r\n        objectFit: \"contain\"\r\n    },\r\n});\r\n\r\n\r\nexport default function SoDetailContent() {\r\n    let data = useLocation();\r\n    //const { postals } = useContext(PostalContext);\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [postalList, setPostalList] = useState([]);\r\n    const [advanceSearch, setAdvanceSearch] = useState(false);\r\n    const [simpleSearch, setSimpleSearch] = useState(true);\r\n    const [result, setResult] = useState(true);\r\n    const [postal, setPostal] = useState(data.state);\r\n    const [opt, setOpt] = useState();\r\n\r\n    function hanndleAssigned() {\r\n        history.push(\"/so_dashboard\");\r\n    }\r\n\r\n    const [state, setState] = React.useState({\r\n        checkedA: false,\r\n    });\r\n    const handleChange = (event) => {\r\n        if (event.target.name == 'checkedA') {\r\n            setAdvanceSearch(!advanceSearch)\r\n        }\r\n\r\n        setState({\r\n            ...state, [event.target.name]: event.target.checked\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        const users = getUsers();\r\n\r\n        const options = [];\r\n        JSON.parse(users).map((u) => (\r\n            options.push(\r\n                { value: u.id, label: u.fullName + ' (' + u.position + ' )' }\r\n            )\r\n        )\r\n        );\r\n        setOpt(options);\r\n\r\n\r\n        return () => {\r\n        }\r\n    }, [])\r\n\r\n    let searchschema = yup.object().shape({\r\n        key1: yup.string().required(),\r\n    });\r\n\r\n    const { register, handleSubmit, errors } = useForm({\r\n        validationSchema: searchschema\r\n    });\r\n\r\n\r\n    function onSubmitAssign(data) {\r\n        alert(data);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Grid container style={{ padding: 20 }}>\r\n                <Grid item xs={12} sm={7} style={{ marginLeft: 40 }}>\r\n\r\n                    <Paper className={classes.paper} elevation={5} style={{ padding: 20 }}>\r\n\r\n                        <Grid container>\r\n\r\n                            <Grid item xs={12} sm={12}>\r\n                                <Typography variant='h6' align='left'>\r\n                                    {LetterFormdata.postaldetails}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12}>\r\n                                <Typography variant='body1' align='left'>\r\n                                    {LetterFormdata.letter_reg_number + \" : \"}<span style={{ color: '#6d1b7b' }}> {postal.id}</span>\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12}>\r\n                                <Typography variant='body1' align='left'>\r\n                                    {LetterFormdata.letter_cheque_title}<span style={{ color: '#6d1b7b' }}> {postal.letterTitle}</span>\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12}>\r\n                                <Typography variant='body1' align='left'>\r\n                                    {LetterFormdata.postal_type}<span style={{ color: '#6d1b7b' }}> {postal.postalType}</span>\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12}>\r\n                                <Typography variant='body1' align='left'>\r\n                                    {LetterFormdata.res_mode}<span style={{ color: '#6d1b7b' }}> {postal.receivedMode}</span>\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12}>\r\n                                <Typography variant='body1' align='left'>\r\n                                    {LetterFormdata.past_ref}<span style={{ color: '#6d1b7b' }}> {postal.pastRefNo}</span>\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12}>\r\n                                <Typography variant='body1' align='left'>\r\n                                    {LetterFormdata.recived_date}<span style={{ color: '#6d1b7b' }}> {Moment(postal.receivedDate).format('YYYY-MM-DD')}</span>\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12}>\r\n                                <Typography variant='body1' align='left'>\r\n                                    {LetterFormdata.sender_name}<span style={{ color: '#6d1b7b' }}> {postal.senderName}</span>\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12}>\r\n                                <Typography variant='body1' align='left'>\r\n                                    {LetterFormdata.sender_address}<span style={{ color: '#6d1b7b' }}> {postal.senderAddress}</span>\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12}>\r\n                                <Typography variant='body1' align='left'>\r\n                                    {LetterFormdata.receiver_name}<span style={{ color: '#6d1b7b' }}> {postal.receiverName}</span>\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12}>\r\n                                <Typography variant='body1' align='left'>\r\n                                    {LetterFormdata.receiver_address}<span style={{ color: '#6d1b7b' }}> {postal.receiverAddress}</span>\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                    </Paper>\r\n\r\n                    <Paper className={classes.paper} elevation={5} style={{ padding: 20 }}>\r\n\r\n                        <Grid container>\r\n                            <Grid item xs={12} sm={12}>\r\n                                <Typography variant='h6' align='left'>\r\n                                    {LetterFormdata.comments}\r\n                                </Typography>\r\n\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} style={{ marginTop: 10 }}>\r\n                                <Comments postalId={postal.id} />\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                    </Paper>\r\n                    <Paper className={classes.paper} elevation={5} style={{ padding: 20 }}>\r\n\r\n                        <Grid container>\r\n                            <Grid item xs={12} sm={12}>\r\n                                <Typography variant='h6' align='left'>\r\n                                    {LetterFormdata.postalimage}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12}>\r\n                                {\r\n                                    // <img\r\n                                    //     src={process.env.PUBLIC_URL + '/docs/jass.jpg'}\r\n                                    //     className={classes.preview}\r\n                                    // />\r\n                                }\r\n                                {postal.fileName && <ImageComponent fileName={postal.fileName} />}\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Paper>\r\n\r\n                </Grid>\r\n                <Grid item xs={12} sm={4} style={{ marginLeft: 10 }}>\r\n                    <LetterPath postalid={postal.id} />\r\n\r\n                    <AssignForm\r\n                        opt={opt}\r\n                        movetype=\"NEW\"\r\n                        postalid={postal.id}\r\n                        onChange={hanndleAssigned} />\r\n\r\n                    <Workassign\r\n                        opt={opt}\r\n                        movetype=\"NEW\"\r\n                        postalid={postal.id}\r\n                        onChange={hanndleAssigned} />\r\n\r\n                    <CloseForm\r\n                        movetype=\"CLOSE\"\r\n                        postalid={postal.id}\r\n                        onChange={hanndleAssigned} />\r\n\r\n\r\n\r\n                </Grid>\r\n\r\n\r\n\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\pages\\CgSearch.js",["578","579","580","581"],"import React from 'react'\r\nimport { getId, getRoles, getToken, getUsername } from '../utils/Common';\r\nimport Footer from '../components/Footer/AppFooter'\r\nimport AppbarCgSearch from '../components/headers/AppbarCgSearch';\r\nimport CgSearchContent from '../components/contents/CgSearchContent'\r\n\r\n\r\nfunction CgSearch() {\r\n\r\n    const id = getId();\r\n    const token = getToken();\r\n    const roles = getRoles();\r\n    const username = getUsername();\r\n\r\n    return (\r\n        <>\r\n            <AppbarCgSearch/>\r\n            <div align=\"center\" >\r\n            <CgSearchContent/>\r\n            </div>\r\n            \r\n            <Footer/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CgSearch\r\n","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\headers\\AppbarCgSearch.js",["582"],"import React from 'react'\r\nimport { appbardata } from '../../data/data'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { Link } from 'react-router-dom';\r\nimport Logout from '../../pages/Logout';\r\nimport LogedUser from '../../components/LogedUser';\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: '#4a148c',\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    links: {\r\n        color: \"#fff\",\r\n\r\n    }\r\n}));\r\n\r\n\r\nfunction AppbarCgSearch() {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\" className={classes.root}>\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                        <MailOutlineIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        {appbardata.sitename}\r\n                    </Typography>\r\n                    <Button className={classes.links} component={Link} to=\"/ao_dashboard\" variant=\"\" color=\"#fff\">\r\n                        {appbardata.dashboard}\r\n                    </Button>\r\n                    <Logout/>\r\n                    <LogedUser/>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppbarCgSearch\r\n","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\contents\\CgSearchContent.js",["583","584","585","586","587","588","589","590"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { searchdata, Apidata } from '../../data/data'\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport Pageview from '@material-ui/icons/Pageview';\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getToken, getId } from '../../utils/Common';\r\nimport Moment from 'moment';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport * as yup from 'yup';\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n    paper: {\r\n        marginTop: 10,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        maxWidth: 900,\r\n    }\r\n});\r\n\r\n\r\nexport default function CgSearchContent() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [postalList, setPostalList] = useState([]);\r\n    const [advanceSearch, setAdvanceSearch] = useState(false);\r\n    const [simpleSearch, setSimpleSearch] = useState(true);\r\n    const [result, setResult] = useState(true);\r\n\r\n    const [state, setState] = React.useState({\r\n        checkedA: false,\r\n    });\r\n    const handleChange = (event) => {\r\n        if (event.target.name == 'checkedA') {\r\n            setAdvanceSearch(!advanceSearch)\r\n        }\r\n\r\n        setState({\r\n            ...state, [event.target.name]: event.target.checked\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        //loadApiData();\r\n        return () => {\r\n\r\n        }\r\n    }, [])\r\n\r\n    let searchschema = yup.object().shape({\r\n        key1: yup.string().required(),\r\n    });\r\n\r\n    const { register, handleSubmit, errors } = useForm({\r\n        validationSchema: searchschema\r\n    });\r\n\r\n\r\n    function onSubmit(data) {\r\n        const apipath = Apidata.api;\r\n        const token = getToken();\r\n        setError(null);\r\n        setLoading(true);\r\n        axios.get(apipath + 'v1/postal/search',\r\n            { headers: { \"Authorization\": `Bearer ${token}` }, params: { key1: data.key1 } })\r\n            .then(response => {\r\n                setResult(true);\r\n                const result = response.data;\r\n                console.log(result);\r\n                setPostalList(result);\r\n                setLoading(false);\r\n            }).catch(error => {\r\n                setResult(false);\r\n                setPostalList();\r\n                setLoading(false);\r\n                //alert(error);\r\n                // if (error.response.status === 401) setError(error.response.data.message);\r\n                // else setError(\"Something went wrong. Please try again later.\");\r\n            });\r\n    }\r\n    return (\r\n        <>\r\n\r\n            {\r\n                simpleSearch &&\r\n                <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\r\n                    <Paper className={classes.paper} elevation={5}>\r\n\r\n                        <Grid container>\r\n                            <Grid item xs={12} sm={9} style={{ paddingLeft: 30, paddingTop: 30 }} >\r\n                                <Typography variant='h6' align='left'>\r\n                                    {searchdata.search}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={3} style={{ paddingLeft: 30, paddingTop: 30 }} >\r\n\r\n                                {searchdata.advanced_search}\r\n\r\n                                <Switch\r\n                                    checked={state.checkedA}\r\n                                    onChange={handleChange}\r\n                                    name=\"checkedA\"\r\n                                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                />\r\n\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={9} style={{ paddingLeft: 30, paddingTop: 10, paddingBottom: 20 }} >\r\n                                <TextField\r\n                                    //error={errors.letter_title ? true : false}\r\n                                    id=\"key1\"\r\n                                    name=\"key1\"\r\n                                    inputRef={register}\r\n                                    //inputRef={register}\r\n                                    label={searchdata.search}\r\n                                    fullWidth\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={3} sm={3} style={{ paddingTop: 15, paddingBottom: 20 }}>\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size=\"large\"\r\n                                    className={classes.button}\r\n                                    startIcon={<SearchIcon />}\r\n                                >\r\n                                    {searchdata.search}\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                    </Paper>\r\n                </form>\r\n            }\r\n            {/* Advanced search*/}\r\n            {\r\n                advanceSearch &&\r\n                <Paper className={classes.paper} elevation={5}>\r\n                    <form>\r\n                        <Grid container style={{ paddingRight: 30 }}>\r\n                            <Grid item xs={12} sm={12} style={{ paddingLeft: 30, paddingTop: 30 }} >\r\n                                <Typography variant='h6' align='left'>\r\n                                    {searchdata.advanced_search}\r\n                                </Typography>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={3} style={{ paddingLeft: 30, paddingTop: 10, paddingBottom: 20 }} >\r\n                                <TextField\r\n                                    //error={errors.letter_title ? true : false}\r\n                                    id=\"letter_title\"\r\n                                    name=\"letter_title\"\r\n                                    //inputRef={register}\r\n                                    label={searchdata.search}\r\n                                    fullWidth\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={3} style={{ paddingLeft: 30, paddingTop: 10, paddingBottom: 20 }} >\r\n                                <TextField\r\n                                    //error={errors.letter_title ? true : false}\r\n                                    id=\"letter_title\"\r\n                                    name=\"letter_title\"\r\n                                    //inputRef={register}\r\n                                    label={searchdata.search}\r\n                                    fullWidth\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={3} style={{ paddingLeft: 30, paddingTop: 10, paddingBottom: 20 }} >\r\n                                <TextField\r\n                                    //error={errors.letter_title ? true : false}\r\n                                    id=\"letter_title\"\r\n                                    name=\"letter_title\"\r\n                                    //inputRef={register}\r\n                                    label={searchdata.search}\r\n                                    fullWidth\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={3} style={{ paddingLeft: 30, paddingTop: 10, paddingBottom: 20 }} >\r\n                                <TextField\r\n                                    //error={errors.letter_title ? true : false}\r\n                                    id=\"letter_title\"\r\n                                    name=\"letter_title\"\r\n                                    //inputRef={register}\r\n                                    label={searchdata.search}\r\n                                    fullWidth\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={9} style={{ paddingLeft: 30, paddingTop: 10, paddingBottom: 20 }} >\r\n\r\n                            </Grid>\r\n                            <Grid item xs={3} sm={3} style={{ paddingTop: 15, paddingBottom: 20 }}>\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size=\"large\"\r\n                                    className={classes.button}\r\n                                    startIcon={<SearchIcon />}\r\n                                >\r\n                                    {searchdata.search}\r\n                                </Button>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                    </form>\r\n                </Paper>\r\n\r\n            }\r\n            {/* End Advanced search*/}\r\n            <Paper className={classes.paper} elevation={5}>\r\n                <TableContainer component={Paper}>\r\n                    <Table className={classes.table} aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n\r\n                                <TableCell >{searchdata.res_title}</TableCell>\r\n                                <TableCell align=\"right\">{searchdata.res_sender}</TableCell>\r\n                                <TableCell align=\"right\">{searchdata.res_type}</TableCell>\r\n                                <TableCell align=\"right\">{searchdata.res_id}</TableCell>\r\n                                <TableCell align=\"right\">{searchdata.res_date}</TableCell>\r\n                                <TableCell></TableCell>\r\n                                <TableCell></TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        \r\n                            < TableBody >\r\n                                {\r\n                                    postalList.map((postal) => (\r\n                                        <TableRow key={postal.id}>\r\n                                            <TableCell component=\"th\" scope=\"row\">\r\n                                                {postal.letterTitle}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\">{postal.senderName}</TableCell>\r\n                                            <TableCell align=\"right\">{postal.postalType}</TableCell>\r\n                                            <TableCell align=\"right\">{postal.id}</TableCell>\r\n                                            <TableCell align=\"right\">{Moment(postal.receivedDate).format('YYYY-MM-DD')}</TableCell>\r\n                                            <TableCell><Edit /></TableCell>\r\n                                            <TableCell><Pageview /></TableCell>\r\n                                        </TableRow>\r\n                                    ))\r\n                                }\r\n                            </TableBody>\r\n                        \r\n                        \r\n                    </Table>\r\n                </TableContainer>\r\n            </Paper>\r\n        </>\r\n    )\r\n}\r\n","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\pages\\SoSearch.js",["591","592","593","594"],"import React from 'react'\r\nimport { getId, getRoles, getToken, getUsername } from '../utils/Common';\r\nimport Footer from '../components/Footer/AppFooter'\r\nimport AppbarSoSearch from '../components/headers/AppbarSoSearch';\r\nimport SoSearchContent from '../components/contents/SoSearchContent'\r\n\r\n\r\nfunction SoSearch() {\r\n\r\n    const id = getId();\r\n    const token = getToken();\r\n    const roles = getRoles();\r\n    const username = getUsername();\r\n\r\n    return (\r\n        <>\r\n            <AppbarSoSearch/>\r\n            <div align=\"center\" >\r\n            <SoSearchContent/>\r\n            </div>\r\n            \r\n            <Footer/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SoSearch\r\n","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\headers\\AppbarSoSearch.js",["595"],"import React from 'react'\r\nimport { appbardata } from '../../data/data'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { Link } from 'react-router-dom';\r\nimport Logout from '../../pages/Logout';\r\nimport LogedUser from '../../components/LogedUser';\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: '#4a148c',\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    links: {\r\n        color: \"#fff\",\r\n\r\n    }\r\n}));\r\n\r\n\r\nfunction AppbarSoSearch() {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\" className={classes.root}>\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                        <MailOutlineIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        {appbardata.sitename}\r\n                    </Typography>\r\n                    <Button className={classes.links} component={Link} to=\"/so_dashboard\" variant=\"\" color=\"#fff\">\r\n                        {appbardata.dashboard}\r\n                    </Button>\r\n                    <Logout/>\r\n                    <LogedUser/>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppbarSoSearch\r\n","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\contents\\SoSearchContent.js",["596","597","598","599","600","601","602","603"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { searchdata, Apidata } from '../../data/data'\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport Pageview from '@material-ui/icons/Pageview';\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getToken, getId } from '../../utils/Common';\r\nimport Moment from 'moment';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport * as yup from 'yup';\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n    paper: {\r\n        marginTop: 10,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        maxWidth: 900,\r\n    }\r\n});\r\n\r\n\r\nexport default function SoSearchContent() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [postalList, setPostalList] = useState([]);\r\n    const [advanceSearch, setAdvanceSearch] = useState(false);\r\n    const [simpleSearch, setSimpleSearch] = useState(true);\r\n    const [result, setResult] = useState(true);\r\n\r\n    const [state, setState] = React.useState({\r\n        checkedA: false,\r\n    });\r\n    const handleChange = (event) => {\r\n        if (event.target.name == 'checkedA') {\r\n            setAdvanceSearch(!advanceSearch)\r\n        }\r\n\r\n        setState({\r\n            ...state, [event.target.name]: event.target.checked\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        //loadApiData();\r\n        return () => {\r\n\r\n        }\r\n    }, [])\r\n\r\n    let searchschema = yup.object().shape({\r\n        key1: yup.string().required(),\r\n    });\r\n\r\n    const { register, handleSubmit, errors } = useForm({\r\n        validationSchema: searchschema\r\n    });\r\n\r\n\r\n    function onSubmit(data) {\r\n        const apipath = Apidata.api;\r\n        const token = getToken();\r\n        setError(null);\r\n        setLoading(true);\r\n        axios.get(apipath + 'v1/postal/search',\r\n            { headers: { \"Authorization\": `Bearer ${token}` }, params: { key1: data.key1 } })\r\n            .then(response => {\r\n                setResult(true);\r\n                const result = response.data;\r\n                console.log(result);\r\n                setPostalList(result);\r\n                setLoading(false);\r\n            }).catch(error => {\r\n                setResult(false);\r\n                setPostalList();\r\n                setLoading(false);\r\n                //alert(error);\r\n                // if (error.response.status === 401) setError(error.response.data.message);\r\n                // else setError(\"Something went wrong. Please try again later.\");\r\n            });\r\n    }\r\n    return (\r\n        <>\r\n\r\n            {\r\n                simpleSearch &&\r\n                <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\r\n                    <Paper className={classes.paper} elevation={5}>\r\n\r\n                        <Grid container>\r\n                            <Grid item xs={12} sm={9} style={{ paddingLeft: 30, paddingTop: 30 }} >\r\n                                <Typography variant='h6' align='left'>\r\n                                    {searchdata.search}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={3} style={{ paddingLeft: 30, paddingTop: 30 }} >\r\n\r\n                                {searchdata.advanced_search}\r\n\r\n                                <Switch\r\n                                    checked={state.checkedA}\r\n                                    onChange={handleChange}\r\n                                    name=\"checkedA\"\r\n                                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                />\r\n\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={9} style={{ paddingLeft: 30, paddingTop: 10, paddingBottom: 20 }} >\r\n                                <TextField\r\n                                    //error={errors.letter_title ? true : false}\r\n                                    id=\"key1\"\r\n                                    name=\"key1\"\r\n                                    inputRef={register}\r\n                                    //inputRef={register}\r\n                                    label={searchdata.search}\r\n                                    fullWidth\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={3} sm={3} style={{ paddingTop: 15, paddingBottom: 20 }}>\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size=\"large\"\r\n                                    className={classes.button}\r\n                                    startIcon={<SearchIcon />}\r\n                                >\r\n                                    {searchdata.search}\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                    </Paper>\r\n                </form>\r\n            }\r\n            {/* Advanced search*/}\r\n            {\r\n                advanceSearch &&\r\n                <Paper className={classes.paper} elevation={5}>\r\n                    <form>\r\n                        <Grid container style={{ paddingRight: 30 }}>\r\n                            <Grid item xs={12} sm={12} style={{ paddingLeft: 30, paddingTop: 30 }} >\r\n                                <Typography variant='h6' align='left'>\r\n                                    {searchdata.advanced_search}\r\n                                </Typography>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={3} style={{ paddingLeft: 30, paddingTop: 10, paddingBottom: 20 }} >\r\n                                <TextField\r\n                                    //error={errors.letter_title ? true : false}\r\n                                    id=\"letter_title\"\r\n                                    name=\"letter_title\"\r\n                                    //inputRef={register}\r\n                                    label={searchdata.search}\r\n                                    fullWidth\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={3} style={{ paddingLeft: 30, paddingTop: 10, paddingBottom: 20 }} >\r\n                                <TextField\r\n                                    //error={errors.letter_title ? true : false}\r\n                                    id=\"letter_title\"\r\n                                    name=\"letter_title\"\r\n                                    //inputRef={register}\r\n                                    label={searchdata.search}\r\n                                    fullWidth\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={3} style={{ paddingLeft: 30, paddingTop: 10, paddingBottom: 20 }} >\r\n                                <TextField\r\n                                    //error={errors.letter_title ? true : false}\r\n                                    id=\"letter_title\"\r\n                                    name=\"letter_title\"\r\n                                    //inputRef={register}\r\n                                    label={searchdata.search}\r\n                                    fullWidth\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={3} style={{ paddingLeft: 30, paddingTop: 10, paddingBottom: 20 }} >\r\n                                <TextField\r\n                                    //error={errors.letter_title ? true : false}\r\n                                    id=\"letter_title\"\r\n                                    name=\"letter_title\"\r\n                                    //inputRef={register}\r\n                                    label={searchdata.search}\r\n                                    fullWidth\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={9} style={{ paddingLeft: 30, paddingTop: 10, paddingBottom: 20 }} >\r\n\r\n                            </Grid>\r\n                            <Grid item xs={3} sm={3} style={{ paddingTop: 15, paddingBottom: 20 }}>\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size=\"large\"\r\n                                    className={classes.button}\r\n                                    startIcon={<SearchIcon />}\r\n                                >\r\n                                    {searchdata.search}\r\n                                </Button>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                    </form>\r\n                </Paper>\r\n\r\n            }\r\n            {/* End Advanced search*/}\r\n            <Paper className={classes.paper} elevation={5}>\r\n                <TableContainer component={Paper}>\r\n                    <Table className={classes.table} aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n\r\n                                <TableCell >{searchdata.res_title}</TableCell>\r\n                                <TableCell align=\"right\">{searchdata.res_sender}</TableCell>\r\n                                <TableCell align=\"right\">{searchdata.res_type}</TableCell>\r\n                                <TableCell align=\"right\">{searchdata.res_id}</TableCell>\r\n                                <TableCell align=\"right\">{searchdata.res_date}</TableCell>\r\n                                <TableCell></TableCell>\r\n                                <TableCell></TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        \r\n                            < TableBody >\r\n                                {\r\n                                    postalList.map((postal) => (\r\n                                        <TableRow key={postal.id}>\r\n                                            <TableCell component=\"th\" scope=\"row\">\r\n                                                {postal.letterTitle}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\">{postal.senderName}</TableCell>\r\n                                            <TableCell align=\"right\">{postal.postalType}</TableCell>\r\n                                            <TableCell align=\"right\">{postal.id}</TableCell>\r\n                                            <TableCell align=\"right\">{Moment(postal.receivedDate).format('YYYY-MM-DD')}</TableCell>\r\n                                            <TableCell><Edit /></TableCell>\r\n                                            <TableCell><Pageview /></TableCell>\r\n                                        </TableRow>\r\n                                    ))\r\n                                }\r\n                            </TableBody>\r\n                        \r\n                        \r\n                    </Table>\r\n                </TableContainer>\r\n            </Paper>\r\n        </>\r\n    )\r\n}\r\n","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\pages\\Logout.js",["604"],"import React from 'react'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { removeUserSession } from '../utils/Common';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { appbardata } from '../data/data';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    links: {\r\n        color: \"#fff\",\r\n    }\r\n}));\r\n\r\nfunction Logout() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    \r\n    function loadLogin() {\r\n        removeUserSession();\r\n        history.push('/');\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Button  className={classes.links} variant=\"\" color=\"#fff\" onClick={loadLogin}>\r\n                {appbardata.logout}\r\n            </Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Logout;\r\n","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\LogedUser.js",[],"F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\context\\PostalContext.js",[],"F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\reducers\\PostalReducers.js",[],"F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\forms\\AssignForm.js",["605","606","607"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Apidata, LetterFormdata } from '../../data/data'\r\nimport Select from 'react-select'\r\nimport ArrowForward from '@material-ui/icons/ArrowForward'\r\nimport axios from 'axios';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { getToken, getId, getUsers } from '../../utils/Common';\r\nimport * as yup from 'yup';\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n    paper: {\r\n        marginTop: 10,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        maxWidth: 900,\r\n    },\r\n});\r\n\r\nfunction AssignForm(props) {\r\n    const classes = useStyles();\r\n    const [error, setError] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [opt, setOpt] = useState();\r\n\r\n    useEffect(() => {\r\n        const users = getUsers();\r\n        const options = [];\r\n        JSON.parse(users).map((u) => (\r\n            options.push(\r\n                { value: u.id, label: u.id+') '+u.fullName + ' (' + u.position + ' )' }\r\n            )\r\n        )\r\n        );\r\n        setOpt(options);\r\n\r\n\r\n        return () => {\r\n        }\r\n    }, [])\r\n\r\n    let assignschema = yup.object().shape({\r\n        ref_comment: yup.string(),\r\n    });\r\n\r\n    const { register, handleSubmit, control, setValue, errors } = useForm({\r\n        validationSchema: assignschema\r\n    });\r\n\r\n    function onSubmitAssign(data) {\r\n        const apipath = Apidata.api;\r\n        const token = getToken();\r\n        const userId = getId();\r\n        const refId=data.ref_id.value;\r\n        if(userId!=refId){\r\n            setError(null);\r\n            setLoading(true);\r\n            axios.post(apipath + 'v1/postal_movement', {\r\n                moveType: props.movetype,\r\n                postalId: props.postalid,\r\n                receiverId: refId,\r\n            }, { headers: { \"Authorization\": `Bearer ${token}` } })\r\n                .then(response => {\r\n                    setLoading(false);\r\n                    alert(\"Saved\");\r\n                    props.onChange();\r\n                }).catch(error => {\r\n                    setError(true);\r\n                    setLoading(false);\r\n                    alert(error);\r\n                });\r\n                \r\n        }else{\r\n            alert(\"You cant assign again to you\")\r\n\r\n        }\r\n        \r\n    }\r\n\r\n    const handleChange = (change) => {\r\n          setValue(\"ref_id\", change, {\r\n          \r\n        });\r\n      };\r\n\r\n    return (\r\n        <form className={classes.form} onSubmit={handleSubmit(onSubmitAssign)}>\r\n            <Paper className={classes.paper} elevation={5} style={{ padding: 20 }}>\r\n                <Grid container>\r\n                    <Grid item xs={12} sm={12} style={{ marginBottom: 30 }}>\r\n                        <Typography variant='h6' align='left'>\r\n                            {LetterFormdata.forward_to}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12}>\r\n                        <Controller\r\n                            name=\"ref_id\"\r\n                            control={control}\r\n                            inputRef={register}\r\n                            render={() => (\r\n                                <Select\r\n                                \r\n                                    options={opt}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12}>\r\n                        <TextField style={{ marginTop: 20 }}\r\n                            error={errors.ref_comment ? true : false}\r\n                            id=\"ref_comment\"\r\n                            name=\"ref_comment\"\r\n                            inputRef={register}\r\n                            label={LetterFormdata.comment}\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={12} style={{ marginTop: 30 }}>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"large\"\r\n                            className={classes.button}\r\n                            startIcon={<ArrowForward />}\r\n                        >\r\n                            {LetterFormdata.forward}\r\n                        </Button>\r\n                        {\r\n                            loading &&\r\n                            <CircularProgress />\r\n\r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AssignForm\r\n","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\models\\FormModel.js",["608"],"import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport CommentForm from '../forms/CommentForm';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\n\r\nfunction rand() {\r\n    return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 + rand();\r\n    const left = 50 + rand();\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        position: 'absolute',\r\n        width: 800,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n}));\r\n\r\nfunction FormModel(props) {\r\n    const classes = useStyles();\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        {props.onChange()}\r\n    };\r\n\r\n    const body = (\r\n        <div style={modalStyle} className={classes.paper}>\r\n            <CommentForm postalId={props.id} onChange={handleClose}/>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            \r\n\r\n            <Fab sm color=\"primary\" aria-label=\"add\" onClick={handleOpen} style={{marginBottom:20}}>\r\n                <AddIcon />\r\n            </Fab>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                \r\n            >\r\n                {body}\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormModel\r\n","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\forms\\CloseForm.js",["609","610","611","612","613","614","615"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Apidata, LetterFormdata } from '../../data/data'\r\nimport Done from '@material-ui/icons/Done'\r\nimport axios from 'axios';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { getToken, getId, getUsers } from '../../utils/Common';\r\nimport * as yup from 'yup';\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n    paper: {\r\n        marginTop: 10,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        maxWidth: 900,\r\n    },\r\n});\r\n\r\nfunction CloseForm(props) {\r\n    const classes = useStyles();\r\n    const [error, setError] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n   \r\n    let assignschema = yup.object().shape({\r\n        ref_comment: yup.string(),\r\n    });\r\n\r\n    const { register, handleSubmit, control, setValue, errors } = useForm({\r\n        validationSchema: assignschema\r\n    });\r\n\r\n    function onSubmitAssign(data) {\r\n        const apipath = Apidata.api;\r\n        const token = getToken();\r\n        const userId = getId();\r\n            setError(null);\r\n            setLoading(true);\r\n            axios.post(apipath + 'v1/postal_movement', {\r\n                moveType: props.movetype,\r\n                postalId: props.postalid,\r\n                receiverId: userId,\r\n            }, { headers: { \"Authorization\": `Bearer ${token}` } })\r\n                .then(response => {\r\n                    setLoading(false);\r\n                    alert(\"Saved\");\r\n                    props.onChange();\r\n                }).catch(error => {\r\n                    setError(true);\r\n                    setLoading(false);\r\n                    alert(error);\r\n                });\r\n                \r\n        \r\n        \r\n    }\r\n\r\n    return (\r\n        <form className={classes.form} onSubmit={handleSubmit(onSubmitAssign)}>\r\n            <Paper className={classes.paper} elevation={5} style={{ padding: 20 }}>\r\n                <Grid container>\r\n                    <Grid item xs={12} sm={12} style={{ marginBottom: 5 }}>\r\n                        <Typography variant='h6' align='left'>\r\n                            {LetterFormdata.colse_postal}\r\n                        </Typography>\r\n                    </Grid>\r\n                    \r\n                    <Grid item xs={12} sm={12}>\r\n                        <TextField style={{ marginTop: 20 }}\r\n                            error={errors.ref_comment ? true : false}\r\n                            id=\"ref_comment\"\r\n                            name=\"ref_comment\"\r\n                            inputRef={register}\r\n                            label={LetterFormdata.comment}\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={12} style={{ marginTop: 30 }}>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"large\"\r\n                            className={classes.button}\r\n                            startIcon={<Done />}\r\n                        >\r\n                            {LetterFormdata.close}\r\n                        </Button>\r\n                        {\r\n                            loading &&\r\n                            <CircularProgress />\r\n\r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default CloseForm\r\n","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\forms\\CommentForm.js",["616","617","618","619","620","621","622"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Apidata, LetterFormdata } from '../../data/data'\r\nimport Save from '@material-ui/icons/Save'\r\nimport axios from 'axios';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { getToken, getId, getUsers } from '../../utils/Common';\r\nimport * as yup from 'yup';\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n    paper: {\r\n        marginTop: 10,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        maxWidth: 900,\r\n    },\r\n});\r\n\r\nfunction CommentForm(props) {\r\n    const classes = useStyles();\r\n    const [error, setError] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n   \r\n    let assignschema = yup.object().shape({\r\n        comment: yup.string(),\r\n    });\r\n\r\n    const { register, handleSubmit, control, setValue, errors } = useForm({\r\n        validationSchema: assignschema\r\n    });\r\n\r\n    function onSubmitAssign(data) {\r\n        const apipath = Apidata.api;\r\n        const token = getToken();\r\n        const userId = getId();\r\n       \r\n            setError(null);\r\n            setLoading(true);\r\n            axios.post(apipath + 'v1/comment', {\r\n                comment:data.comment,\r\n                postalId: props.postalId,\r\n                userId: userId,\r\n                \r\n            }, { headers: { \"Authorization\": `Bearer ${token}` } })\r\n                .then(response => {\r\n                    setLoading(false);\r\n                    alert(\"Saved\");\r\n                    props.onChange();\r\n                }).catch(error => {\r\n                    setError(true);\r\n                    setLoading(false);\r\n                    alert(error);\r\n                });\r\n        \r\n    }\r\n\r\n    return (\r\n        <form className={classes.form} onSubmit={handleSubmit(onSubmitAssign)}>\r\n            <Paper className={classes.paper} elevation={5} style={{ padding: 20 }}>\r\n                <Grid container>\r\n                    <Grid item xs={12} sm={12} style={{ marginBottom: 5 }}>\r\n                        <Typography variant='h6' align='left'>\r\n                            {LetterFormdata.add_comment}\r\n                        </Typography>\r\n                    </Grid>\r\n                    \r\n                    <Grid item xs={12} sm={12}>\r\n                        <TextField style={{ marginTop: 20 }}\r\n                            error={errors.comment ? true : false}\r\n                            id=\"comment\"\r\n                            name=\"comment\"\r\n                            inputRef={register}\r\n                            label={LetterFormdata.comment}\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={12} style={{ marginTop: 30 }}>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"large\"\r\n                            className={classes.button}\r\n                            startIcon={<Save />}\r\n                        >\r\n                            {LetterFormdata.save}\r\n                        </Button>\r\n                        {\r\n                            loading &&\r\n                            <CircularProgress />\r\n\r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default CommentForm\r\n","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\contents\\Comments.js",["623","624","625"],"import React, { useState, useEffect } from 'react';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { getToken } from '../../utils/Common';\r\nimport { Apidata } from '../../data/data'\r\nimport FormModel from '../models/FormModel';\r\n\r\nfunction Comments(props) {\r\n    const [comments, setComments] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    function loadApiData() {\r\n        \r\n        const apipath = Apidata.api;\r\n        const token = getToken();\r\n        // display form data on success\r\n        setError(null);\r\n        setLoading(true);\r\n        axios.get(apipath + 'v1/comment',\r\n            { headers: { \"Authorization\": `Bearer ${token}` }, params: { postalId: props.postalId } })\r\n            .then(response => {\r\n                const result = response.data;\r\n                //alert(result);\r\n                console.log(result);\r\n                setComments(result);\r\n                setLoading(false);\r\n                //console.log(postals)\r\n            }).catch(error => {\r\n                setLoading(false);\r\n               // if (error.response.status === 401) setError(error.response.data.message);\r\n               // else setError(\"Something went wrong. Please try again later.\");\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadApiData();\r\n        return () => {\r\n\r\n        }\r\n    }, [])\r\n    \r\n\r\n    return (\r\n        <>\r\n            <FormModel id={props.postalId} onChange={loadApiData} />\r\n            {comments && comments.map((comment) => (\r\n                <Paper style={{ background: '#E8F5E9', marginBottom:10 }}>\r\n                    \r\n                    <Grid container >\r\n                        <Grid item xs={12} sm={12}>\r\n                            <Typography variant=\"subtitle1\" >{comment.comment}</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12}>\r\n                            <Typography variant=\"body2\" style={{color:'#4a148c'}}>{comment.commentedUser.fullName}\r\n                   <span style={{color:'#4a148c',fontSize:10, marginLeft:10}}>{comment.commentedUser.position}</span> </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n\r\n            ))}\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Comments\r\n","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\forms\\Uploadform.js",[],"F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\contents\\Content.js",["626","627"],"F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\forms\\Fileuploadformpdf.js",["628","629","630","631","632","633","634","635","636","637","638"],"F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\contents\\AoDetailContent copy.js",["639","640","641","642","643","644","645","646","647","648","649","650","651","652","653","654","655","656","657","658","659","660","661","662","663"],"F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\img\\ImageComponent.js",["664","665","666"],"import React, {useEffect, useState, makeStyles} from 'react'\r\n\r\n\r\nfunction ImageComponent(props) {\r\n\r\n    const [component, setComponent] = useState();\r\n\r\n    useEffect(() => {\r\n        //const images = require.context('../img', true);\r\n        //import('./01.jpg').then(image => setComponent());\r\n        import('./'+props.fileName).then(image => setComponent(image.default));\r\n    }, [])\r\n\r\n   \r\n    return (\r\n        <>\r\n            <img src={component} style={{width:600,height:600}} >\r\n            </img>    \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ImageComponent\r\n","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\contents\\LetterPath.js",["667","668","669","670"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { getToken } from '../../utils/Common';\r\nimport { Apidata } from '../../data/data';\r\nimport axios from 'axios';\r\nimport Moment from 'moment';\r\n\r\n\r\nfunction LetterPath(props) {\r\n    const [track, setTrack] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        loadData(props.postalid);\r\n        return () => {\r\n\r\n        }\r\n    }, [])\r\n\r\n\r\n\r\n    function loadData(pid) {\r\n        const apipath = Apidata.api;\r\n        const token = getToken();\r\n        alert(pid);\r\n        setError(null);\r\n        setLoading(true);\r\n        axios.get(apipath + 'v1/postal_movement',\r\n            { headers: { \"Authorization\": `Bearer ${token}` }, params: { postalId: pid } })\r\n            .then(response => {\r\n                const result = response.data;\r\n                console.log(result);\r\n                setTrack(result);\r\n                setLoading(false);\r\n                //console.log(postals)\r\n            }).catch(error => {\r\n               \r\n                setLoading(false);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Paper style={{ background: '#E8F5E9', marginBottom: 10 }}>\r\n\r\n                <Grid container >\r\n                    <Grid item xs={12} sm={12}>\r\n                        <Typography variant=\"subtitle1\" >Letter Path</Typography>\r\n                    </Grid>\r\n                    {\r\n                        track && track.map((t) => (\r\n                            <Grid item xs={12} sm={12}>\r\n                                <Typography variant=\"subtitle1\" >{t.receiver.fullName+ \" - \"+Moment(t.openedTime).format('YYYY-MM-DD hh-mm')}</Typography>\r\n                            </Grid>\r\n                        ))\r\n                    }\r\n                </Grid>\r\n            </Paper>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LetterPath\r\n","F:\\work_place\\ecpms\\src\\main\\frontmaat\\src\\components\\forms\\Workassign.js",["671","672","673","674"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Apidata, LetterFormdata } from '../../data/data'\r\nimport Select from 'react-select'\r\nimport ArrowForward from '@material-ui/icons/ArrowForward'\r\nimport axios from 'axios';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { getToken, getId, getUsers } from '../../utils/Common';\r\nimport * as yup from 'yup';\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n    paper: {\r\n        marginTop: 10,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        maxWidth: 900,\r\n    },\r\n    textField: {\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n}));\r\n\r\nfunction Workassign(props) {\r\n    const classes = useStyles();\r\n    const [error, setError] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [opt, setOpt] = useState();\r\n    const date = new Date();\r\n    const formatedDate = `${date.getMonth() + 1}-${date.getDate()}-${date.getFullYear()}`\r\n\r\n\r\n    useEffect(() => {\r\n        const users = getUsers();\r\n        const options = [];\r\n        JSON.parse(users).map((u) => (\r\n            options.push(\r\n                { value: u.id, label: u.id + ') ' + u.fullName + ' (' + u.position + ' )' }\r\n            )\r\n        )\r\n        );\r\n        setOpt(options);\r\n\r\n\r\n        return () => {\r\n        }\r\n    }, [])\r\n\r\n    let assignschema = yup.object().shape({\r\n        ref_comment: yup.string(),\r\n    });\r\n\r\n    const { register, handleSubmit, control, setValue, errors } = useForm({\r\n        validationSchema: assignschema\r\n    });\r\n\r\n    function onSubmitAssign(data) {\r\n        const apipath = Apidata.api;\r\n        const token = getToken();\r\n        const userId = getId();\r\n        const refId = data.ref_id.value;\r\n        if (userId != refId) {\r\n            setError(null);\r\n            setLoading(true);\r\n            axios.post(apipath + 'v1/postal_movement', {\r\n                moveType: props.movetype,\r\n                postalId: props.postalid,\r\n                receiverId: refId,\r\n            }, { headers: { \"Authorization\": `Bearer ${token}` } })\r\n                .then(response => {\r\n                    setLoading(false);\r\n                    alert(\"Saved\");\r\n                    props.onChange();\r\n                }).catch(error => {\r\n                    setError(true);\r\n                    setLoading(false);\r\n                    alert(error);\r\n                });\r\n\r\n        } else {\r\n            alert(\"You cant assign again to you\")\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const handleChange = (change) => {\r\n        setValue(\"ref_id\", change, {\r\n\r\n        });\r\n    };\r\n\r\n    return (\r\n        <form className={classes.form} onSubmit={handleSubmit(onSubmitAssign)}>\r\n            <Paper className={classes.paper} elevation={5} style={{ padding: 20 }}>\r\n                <Grid container>\r\n                    <Grid item xs={12} sm={12} style={{ marginBottom: 30 }}>\r\n                        <Typography variant='h6' align='left'>\r\n                            {LetterFormdata.assign_to}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12}>\r\n                        <Controller\r\n                            name=\"ref_id\"\r\n                            control={control}\r\n                            inputRef={register}\r\n                            render={() => (\r\n                                <Select\r\n\r\n                                    options={opt}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={12}>\r\n                        <TextField style={{ marginTop: 20 }}\r\n                            multiline\r\n                            rowsMin={4}\r\n                            rowsMin={4}\r\n                            error={errors.ref_comment ? true : false}\r\n                            id=\"ref_comment\"\r\n                            name=\"ref_comment\"\r\n\r\n                            inputRef={register}\r\n                            label={LetterFormdata.comment}\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12}>\r\n                        <TextField\r\n                            style={{ marginTop: 20 }}\r\n                            id=\"recived_date\"\r\n                            name=\"recived_date\"\r\n                            inputRef={register}\r\n                            label={LetterFormdata.complete_before}\r\n                            type=\"date\"\r\n                            defaultValue={formatedDate}\r\n                            className={classes.textField}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={12} style={{ marginTop: 30 }}>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"large\"\r\n                            className={classes.button}\r\n                            startIcon={<ArrowForward />}\r\n\r\n                        >\r\n                            {LetterFormdata.forward}\r\n                        </Button>\r\n                        {\r\n                            loading &&\r\n                            <CircularProgress />\r\n\r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Workassign\r\n",{"ruleId":"675","replacedBy":"676"},{"ruleId":"677","replacedBy":"678"},{"ruleId":"679","severity":1,"message":"680","line":10,"column":11,"nodeType":"681","messageId":"682","endLine":10,"endColumn":13},{"ruleId":"679","severity":1,"message":"683","line":11,"column":11,"nodeType":"681","messageId":"682","endLine":11,"endColumn":16},{"ruleId":"679","severity":1,"message":"684","line":12,"column":11,"nodeType":"681","messageId":"682","endLine":12,"endColumn":16},{"ruleId":"679","severity":1,"message":"685","line":13,"column":11,"nodeType":"681","messageId":"682","endLine":13,"endColumn":19},{"ruleId":"679","severity":1,"message":"680","line":9,"column":11,"nodeType":"681","messageId":"682","endLine":9,"endColumn":13},{"ruleId":"679","severity":1,"message":"683","line":10,"column":11,"nodeType":"681","messageId":"682","endLine":10,"endColumn":16},{"ruleId":"679","severity":1,"message":"684","line":11,"column":11,"nodeType":"681","messageId":"682","endLine":11,"endColumn":16},{"ruleId":"679","severity":1,"message":"685","line":12,"column":11,"nodeType":"681","messageId":"682","endLine":12,"endColumn":19},{"ruleId":"679","severity":1,"message":"680","line":9,"column":11,"nodeType":"681","messageId":"682","endLine":9,"endColumn":13},{"ruleId":"679","severity":1,"message":"683","line":10,"column":11,"nodeType":"681","messageId":"682","endLine":10,"endColumn":16},{"ruleId":"679","severity":1,"message":"684","line":11,"column":11,"nodeType":"681","messageId":"682","endLine":11,"endColumn":16},{"ruleId":"679","severity":1,"message":"685","line":12,"column":11,"nodeType":"681","messageId":"682","endLine":12,"endColumn":19},{"ruleId":"679","severity":1,"message":"680","line":10,"column":11,"nodeType":"681","messageId":"682","endLine":10,"endColumn":13},{"ruleId":"679","severity":1,"message":"683","line":11,"column":11,"nodeType":"681","messageId":"682","endLine":11,"endColumn":16},{"ruleId":"679","severity":1,"message":"684","line":12,"column":11,"nodeType":"681","messageId":"682","endLine":12,"endColumn":16},{"ruleId":"679","severity":1,"message":"685","line":13,"column":11,"nodeType":"681","messageId":"682","endLine":13,"endColumn":19},{"ruleId":"679","severity":1,"message":"680","line":10,"column":11,"nodeType":"681","messageId":"682","endLine":10,"endColumn":13},{"ruleId":"679","severity":1,"message":"683","line":11,"column":11,"nodeType":"681","messageId":"682","endLine":11,"endColumn":16},{"ruleId":"679","severity":1,"message":"684","line":12,"column":11,"nodeType":"681","messageId":"682","endLine":12,"endColumn":16},{"ruleId":"679","severity":1,"message":"685","line":13,"column":11,"nodeType":"681","messageId":"682","endLine":13,"endColumn":19},{"ruleId":"679","severity":1,"message":"686","line":5,"column":10,"nodeType":"681","messageId":"682","endLine":5,"endColumn":21},{"ruleId":"679","severity":1,"message":"687","line":8,"column":36,"nodeType":"681","messageId":"682","endLine":8,"endColumn":44},{"ruleId":"679","severity":1,"message":"688","line":45,"column":12,"nodeType":"681","messageId":"682","endLine":45,"endColumn":19},{"ruleId":"679","severity":1,"message":"689","line":46,"column":12,"nodeType":"681","messageId":"682","endLine":46,"endColumn":17},{"ruleId":"690","severity":1,"message":"691","line":81,"column":37,"nodeType":"692","messageId":"693","endLine":81,"endColumn":39},{"ruleId":"690","severity":1,"message":"691","line":84,"column":42,"nodeType":"692","messageId":"693","endLine":84,"endColumn":44},{"ruleId":"690","severity":1,"message":"691","line":87,"column":42,"nodeType":"692","messageId":"693","endLine":87,"endColumn":44},{"ruleId":"690","severity":1,"message":"691","line":90,"column":42,"nodeType":"692","messageId":"693","endLine":90,"endColumn":44},{"ruleId":"690","severity":1,"message":"691","line":93,"column":42,"nodeType":"692","messageId":"693","endLine":93,"endColumn":44},{"ruleId":"679","severity":1,"message":"694","line":8,"column":11,"nodeType":"681","messageId":"682","endLine":8,"endColumn":15},{"ruleId":"695","severity":1,"message":"696","line":24,"column":25,"nodeType":"697","endLine":24,"endColumn":117},{"ruleId":"698","severity":1,"message":"699","line":27,"column":25,"nodeType":"697","endLine":27,"endColumn":57},{"ruleId":"675","replacedBy":"700"},{"ruleId":"677","replacedBy":"701"},{"ruleId":"679","severity":1,"message":"694","line":8,"column":11,"nodeType":"681","messageId":"682","endLine":8,"endColumn":15},{"ruleId":"695","severity":1,"message":"696","line":24,"column":25,"nodeType":"697","endLine":24,"endColumn":117},{"ruleId":"698","severity":1,"message":"699","line":27,"column":25,"nodeType":"697","endLine":27,"endColumn":57},{"ruleId":"679","severity":1,"message":"694","line":8,"column":11,"nodeType":"681","messageId":"682","endLine":8,"endColumn":15},{"ruleId":"695","severity":1,"message":"696","line":24,"column":25,"nodeType":"697","endLine":24,"endColumn":117},{"ruleId":"698","severity":1,"message":"699","line":27,"column":25,"nodeType":"697","endLine":27,"endColumn":57},{"ruleId":"679","severity":1,"message":"694","line":8,"column":11,"nodeType":"681","messageId":"682","endLine":8,"endColumn":15},{"ruleId":"695","severity":1,"message":"696","line":24,"column":25,"nodeType":"697","endLine":24,"endColumn":117},{"ruleId":"698","severity":1,"message":"699","line":27,"column":25,"nodeType":"697","endLine":27,"endColumn":57},{"ruleId":"679","severity":1,"message":"694","line":8,"column":11,"nodeType":"681","messageId":"682","endLine":8,"endColumn":15},{"ruleId":"695","severity":1,"message":"696","line":24,"column":25,"nodeType":"697","endLine":24,"endColumn":117},{"ruleId":"698","severity":1,"message":"699","line":27,"column":25,"nodeType":"697","endLine":27,"endColumn":57},{"ruleId":"679","severity":1,"message":"702","line":11,"column":8,"nodeType":"681","messageId":"682","endLine":11,"endColumn":12},{"ruleId":"679","severity":1,"message":"703","line":12,"column":8,"nodeType":"681","messageId":"682","endLine":12,"endColumn":16},{"ruleId":"679","severity":1,"message":"704","line":35,"column":11,"nodeType":"681","messageId":"682","endLine":35,"endColumn":18},{"ruleId":"679","severity":1,"message":"688","line":36,"column":12,"nodeType":"681","messageId":"682","endLine":36,"endColumn":19},{"ruleId":"679","severity":1,"message":"689","line":37,"column":12,"nodeType":"681","messageId":"682","endLine":37,"endColumn":17},{"ruleId":"679","severity":1,"message":"703","line":12,"column":8,"nodeType":"681","messageId":"682","endLine":12,"endColumn":16},{"ruleId":"679","severity":1,"message":"705","line":15,"column":20,"nodeType":"681","messageId":"682","endLine":15,"endColumn":25},{"ruleId":"679","severity":1,"message":"704","line":35,"column":11,"nodeType":"681","messageId":"682","endLine":35,"endColumn":18},{"ruleId":"679","severity":1,"message":"688","line":36,"column":12,"nodeType":"681","messageId":"682","endLine":36,"endColumn":19},{"ruleId":"679","severity":1,"message":"689","line":37,"column":12,"nodeType":"681","messageId":"682","endLine":37,"endColumn":17},{"ruleId":"706","severity":1,"message":"707","line":46,"column":8,"nodeType":"708","endLine":46,"endColumn":10,"suggestions":"709"},{"ruleId":"679","severity":1,"message":"704","line":51,"column":11,"nodeType":"681","messageId":"682","endLine":51,"endColumn":18},{"ruleId":"679","severity":1,"message":"688","line":52,"column":12,"nodeType":"681","messageId":"682","endLine":52,"endColumn":19},{"ruleId":"679","severity":1,"message":"689","line":53,"column":12,"nodeType":"681","messageId":"682","endLine":53,"endColumn":17},{"ruleId":"679","severity":1,"message":"704","line":43,"column":11,"nodeType":"681","messageId":"682","endLine":43,"endColumn":18},{"ruleId":"679","severity":1,"message":"688","line":44,"column":12,"nodeType":"681","messageId":"682","endLine":44,"endColumn":19},{"ruleId":"679","severity":1,"message":"689","line":45,"column":12,"nodeType":"681","messageId":"682","endLine":45,"endColumn":17},{"ruleId":"679","severity":1,"message":"710","line":59,"column":37,"nodeType":"681","messageId":"682","endLine":59,"endColumn":43},{"ruleId":"679","severity":1,"message":"704","line":42,"column":11,"nodeType":"681","messageId":"682","endLine":42,"endColumn":18},{"ruleId":"679","severity":1,"message":"688","line":43,"column":12,"nodeType":"681","messageId":"682","endLine":43,"endColumn":19},{"ruleId":"679","severity":1,"message":"689","line":44,"column":12,"nodeType":"681","messageId":"682","endLine":44,"endColumn":17},{"ruleId":"679","severity":1,"message":"710","line":60,"column":37,"nodeType":"681","messageId":"682","endLine":60,"endColumn":43},{"ruleId":"679","severity":1,"message":"704","line":43,"column":11,"nodeType":"681","messageId":"682","endLine":43,"endColumn":18},{"ruleId":"679","severity":1,"message":"688","line":44,"column":12,"nodeType":"681","messageId":"682","endLine":44,"endColumn":19},{"ruleId":"679","severity":1,"message":"689","line":45,"column":12,"nodeType":"681","messageId":"682","endLine":45,"endColumn":17},{"ruleId":"679","severity":1,"message":"710","line":59,"column":37,"nodeType":"681","messageId":"682","endLine":59,"endColumn":43},{"ruleId":"711","severity":1,"message":"712","line":81,"column":5,"nodeType":"713","messageId":"693","endLine":81,"endColumn":16},{"ruleId":"711","severity":1,"message":"714","line":91,"column":5,"nodeType":"713","messageId":"693","endLine":91,"endColumn":11},{"ruleId":"698","severity":1,"message":"699","line":8,"column":21,"nodeType":"697","endLine":8,"endColumn":91},{"ruleId":"698","severity":1,"message":"699","line":14,"column":21,"nodeType":"697","endLine":14,"endColumn":54},{"ruleId":"698","severity":1,"message":"699","line":31,"column":21,"nodeType":"697","endLine":31,"endColumn":77},{"ruleId":"698","severity":1,"message":"699","line":36,"column":25,"nodeType":"697","endLine":36,"endColumn":63},{"ruleId":"698","severity":1,"message":"699","line":52,"column":25,"nodeType":"697","endLine":52,"endColumn":63},{"ruleId":"698","severity":1,"message":"699","line":67,"column":25,"nodeType":"697","endLine":67,"endColumn":63},{"ruleId":"698","severity":1,"message":"699","line":82,"column":25,"nodeType":"697","endLine":82,"endColumn":79},{"ruleId":"698","severity":1,"message":"699","line":86,"column":21,"nodeType":"697","endLine":86,"endColumn":77},{"ruleId":"698","severity":1,"message":"699","line":93,"column":25,"nodeType":"697","endLine":93,"endColumn":63},{"ruleId":"698","severity":1,"message":"699","line":98,"column":25,"nodeType":"697","endLine":98,"endColumn":63},{"ruleId":"698","severity":1,"message":"699","line":103,"column":25,"nodeType":"697","endLine":103,"endColumn":63},{"ruleId":"698","severity":1,"message":"699","line":108,"column":25,"nodeType":"697","endLine":108,"endColumn":79},{"ruleId":"698","severity":1,"message":"699","line":112,"column":21,"nodeType":"697","endLine":112,"endColumn":93},{"ruleId":"698","severity":1,"message":"699","line":117,"column":21,"nodeType":"697","endLine":117,"endColumn":116},{"ruleId":"679","severity":1,"message":"715","line":7,"column":8,"nodeType":"681","messageId":"682","endLine":7,"endColumn":14},{"ruleId":"679","severity":1,"message":"716","line":9,"column":8,"nodeType":"681","messageId":"682","endLine":9,"endColumn":16},{"ruleId":"698","severity":1,"message":"699","line":8,"column":17,"nodeType":"697","endLine":8,"endColumn":87},{"ruleId":"679","severity":1,"message":"716","line":9,"column":8,"nodeType":"681","messageId":"682","endLine":9,"endColumn":16},{"ruleId":"679","severity":1,"message":"717","line":2,"column":8,"nodeType":"681","messageId":"682","endLine":2,"endColumn":13},{"ruleId":"679","severity":1,"message":"718","line":5,"column":8,"nodeType":"681","messageId":"682","endLine":5,"endColumn":14},{"ruleId":"679","severity":1,"message":"719","line":11,"column":26,"nodeType":"681","messageId":"682","endLine":11,"endColumn":42},{"ruleId":"679","severity":1,"message":"715","line":14,"column":8,"nodeType":"681","messageId":"682","endLine":14,"endColumn":14},{"ruleId":"679","severity":1,"message":"720","line":92,"column":11,"nodeType":"681","messageId":"682","endLine":92,"endColumn":28},{"ruleId":"679","severity":1,"message":"721","line":107,"column":15,"nodeType":"681","messageId":"682","endLine":107,"endColumn":21},{"ruleId":"679","severity":1,"message":"722","line":114,"column":19,"nodeType":"681","messageId":"682","endLine":114,"endColumn":27},{"ruleId":"706","severity":1,"message":"723","line":133,"column":20,"nodeType":"724","endLine":133,"endColumn":37},{"ruleId":"725","severity":1,"message":"726","line":173,"column":29,"nodeType":"697","endLine":177,"endColumn":31},{"ruleId":"675","replacedBy":"727"},{"ruleId":"677","replacedBy":"728"},{"ruleId":"679","severity":1,"message":"680","line":10,"column":11,"nodeType":"681","messageId":"682","endLine":10,"endColumn":13},{"ruleId":"679","severity":1,"message":"683","line":11,"column":11,"nodeType":"681","messageId":"682","endLine":11,"endColumn":16},{"ruleId":"679","severity":1,"message":"684","line":12,"column":11,"nodeType":"681","messageId":"682","endLine":12,"endColumn":16},{"ruleId":"679","severity":1,"message":"685","line":13,"column":11,"nodeType":"681","messageId":"682","endLine":13,"endColumn":19},{"ruleId":"679","severity":1,"message":"705","line":15,"column":20,"nodeType":"681","messageId":"682","endLine":15,"endColumn":25},{"ruleId":"679","severity":1,"message":"729","line":30,"column":10,"nodeType":"681","messageId":"682","endLine":30,"endColumn":20},{"ruleId":"679","severity":1,"message":"730","line":36,"column":7,"nodeType":"681","messageId":"682","endLine":36,"endColumn":11},{"ruleId":"679","severity":1,"message":"704","line":42,"column":11,"nodeType":"681","messageId":"682","endLine":42,"endColumn":18},{"ruleId":"679","severity":1,"message":"688","line":43,"column":12,"nodeType":"681","messageId":"682","endLine":43,"endColumn":19},{"ruleId":"679","severity":1,"message":"689","line":44,"column":12,"nodeType":"681","messageId":"682","endLine":44,"endColumn":17},{"ruleId":"679","severity":1,"message":"716","line":9,"column":8,"nodeType":"681","messageId":"682","endLine":9,"endColumn":16},{"ruleId":"679","severity":1,"message":"716","line":9,"column":8,"nodeType":"681","messageId":"682","endLine":9,"endColumn":16},{"ruleId":"679","severity":1,"message":"716","line":9,"column":8,"nodeType":"681","messageId":"682","endLine":9,"endColumn":16},{"ruleId":"679","severity":1,"message":"680","line":11,"column":11,"nodeType":"681","messageId":"682","endLine":11,"endColumn":13},{"ruleId":"679","severity":1,"message":"683","line":12,"column":11,"nodeType":"681","messageId":"682","endLine":12,"endColumn":16},{"ruleId":"679","severity":1,"message":"684","line":13,"column":11,"nodeType":"681","messageId":"682","endLine":13,"endColumn":16},{"ruleId":"679","severity":1,"message":"685","line":14,"column":11,"nodeType":"681","messageId":"682","endLine":14,"endColumn":19},{"ruleId":"679","severity":1,"message":"705","line":15,"column":20,"nodeType":"681","messageId":"682","endLine":15,"endColumn":25},{"ruleId":"679","severity":1,"message":"704","line":40,"column":11,"nodeType":"681","messageId":"682","endLine":40,"endColumn":18},{"ruleId":"679","severity":1,"message":"688","line":41,"column":12,"nodeType":"681","messageId":"682","endLine":41,"endColumn":19},{"ruleId":"679","severity":1,"message":"689","line":42,"column":12,"nodeType":"681","messageId":"682","endLine":42,"endColumn":17},{"ruleId":"679","severity":1,"message":"731","line":45,"column":26,"nodeType":"681","messageId":"682","endLine":45,"endColumn":41},{"ruleId":"679","severity":1,"message":"732","line":46,"column":12,"nodeType":"681","messageId":"682","endLine":46,"endColumn":18},{"ruleId":"690","severity":1,"message":"691","line":52,"column":31,"nodeType":"692","messageId":"693","endLine":52,"endColumn":33},{"ruleId":"679","severity":1,"message":"710","line":72,"column":37,"nodeType":"681","messageId":"682","endLine":72,"endColumn":43},{"ruleId":"679","severity":1,"message":"705","line":2,"column":10,"nodeType":"681","messageId":"682","endLine":2,"endColumn":15},{"ruleId":"679","severity":1,"message":"733","line":2,"column":17,"nodeType":"681","messageId":"682","endLine":2,"endColumn":25},{"ruleId":"679","severity":1,"message":"687","line":2,"column":27,"nodeType":"681","messageId":"682","endLine":2,"endColumn":35},{"ruleId":"679","severity":1,"message":"734","line":2,"column":37,"nodeType":"681","messageId":"682","endLine":2,"endColumn":48},{"ruleId":"679","severity":1,"message":"735","line":4,"column":10,"nodeType":"681","messageId":"682","endLine":4,"endColumn":17},{"ruleId":"679","severity":1,"message":"736","line":5,"column":8,"nodeType":"681","messageId":"682","endLine":5,"endColumn":13},{"ruleId":"679","severity":1,"message":"737","line":6,"column":22,"nodeType":"681","messageId":"682","endLine":6,"endColumn":31},{"ruleId":"679","severity":1,"message":"687","line":7,"column":10,"nodeType":"681","messageId":"682","endLine":7,"endColumn":18},{"ruleId":"679","severity":1,"message":"705","line":7,"column":20,"nodeType":"681","messageId":"682","endLine":7,"endColumn":25},{"ruleId":"679","severity":1,"message":"738","line":10,"column":8,"nodeType":"681","messageId":"682","endLine":10,"endColumn":17},{"ruleId":"679","severity":1,"message":"715","line":11,"column":8,"nodeType":"681","messageId":"682","endLine":11,"endColumn":14},{"ruleId":"679","severity":1,"message":"739","line":14,"column":8,"nodeType":"681","messageId":"682","endLine":14,"endColumn":16},{"ruleId":"679","severity":1,"message":"740","line":17,"column":8,"nodeType":"681","messageId":"682","endLine":17,"endColumn":14},{"ruleId":"679","severity":1,"message":"741","line":18,"column":8,"nodeType":"681","messageId":"682","endLine":18,"endColumn":20},{"ruleId":"679","severity":1,"message":"742","line":19,"column":8,"nodeType":"681","messageId":"682","endLine":19,"endColumn":12},{"ruleId":"679","severity":1,"message":"743","line":21,"column":8,"nodeType":"681","messageId":"682","endLine":21,"endColumn":29},{"ruleId":"679","severity":1,"message":"744","line":23,"column":8,"nodeType":"681","messageId":"682","endLine":23,"endColumn":17},{"ruleId":"679","severity":1,"message":"745","line":52,"column":13,"nodeType":"681","messageId":"682","endLine":52,"endColumn":20},{"ruleId":"679","severity":1,"message":"688","line":55,"column":12,"nodeType":"681","messageId":"682","endLine":55,"endColumn":19},{"ruleId":"679","severity":1,"message":"746","line":55,"column":21,"nodeType":"681","messageId":"682","endLine":55,"endColumn":31},{"ruleId":"679","severity":1,"message":"689","line":56,"column":12,"nodeType":"681","messageId":"682","endLine":56,"endColumn":17},{"ruleId":"679","severity":1,"message":"747","line":56,"column":19,"nodeType":"681","messageId":"682","endLine":56,"endColumn":27},{"ruleId":"679","severity":1,"message":"748","line":57,"column":12,"nodeType":"681","messageId":"682","endLine":57,"endColumn":22},{"ruleId":"679","severity":1,"message":"749","line":57,"column":24,"nodeType":"681","messageId":"682","endLine":57,"endColumn":37},{"ruleId":"679","severity":1,"message":"750","line":59,"column":12,"nodeType":"681","messageId":"682","endLine":59,"endColumn":24},{"ruleId":"679","severity":1,"message":"731","line":59,"column":26,"nodeType":"681","messageId":"682","endLine":59,"endColumn":41},{"ruleId":"679","severity":1,"message":"732","line":60,"column":12,"nodeType":"681","messageId":"682","endLine":60,"endColumn":18},{"ruleId":"679","severity":1,"message":"751","line":60,"column":20,"nodeType":"681","messageId":"682","endLine":60,"endColumn":29},{"ruleId":"679","severity":1,"message":"752","line":61,"column":20,"nodeType":"681","messageId":"682","endLine":61,"endColumn":29},{"ruleId":"679","severity":1,"message":"753","line":71,"column":11,"nodeType":"681","messageId":"682","endLine":71,"endColumn":23},{"ruleId":"690","severity":1,"message":"691","line":72,"column":31,"nodeType":"692","messageId":"693","endLine":72,"endColumn":33},{"ruleId":"679","severity":1,"message":"754","line":102,"column":13,"nodeType":"681","messageId":"682","endLine":102,"endColumn":21},{"ruleId":"679","severity":1,"message":"755","line":102,"column":23,"nodeType":"681","messageId":"682","endLine":102,"endColumn":35},{"ruleId":"679","severity":1,"message":"710","line":102,"column":37,"nodeType":"681","messageId":"682","endLine":102,"endColumn":43},{"ruleId":"679","severity":1,"message":"756","line":107,"column":14,"nodeType":"681","messageId":"682","endLine":107,"endColumn":28},{"ruleId":"679","severity":1,"message":"716","line":9,"column":8,"nodeType":"681","messageId":"682","endLine":9,"endColumn":16},{"ruleId":"679","severity":1,"message":"705","line":2,"column":10,"nodeType":"681","messageId":"682","endLine":2,"endColumn":15},{"ruleId":"679","severity":1,"message":"733","line":2,"column":17,"nodeType":"681","messageId":"682","endLine":2,"endColumn":25},{"ruleId":"679","severity":1,"message":"687","line":2,"column":27,"nodeType":"681","messageId":"682","endLine":2,"endColumn":35},{"ruleId":"679","severity":1,"message":"734","line":2,"column":37,"nodeType":"681","messageId":"682","endLine":2,"endColumn":48},{"ruleId":"679","severity":1,"message":"757","line":3,"column":8,"nodeType":"681","messageId":"682","endLine":3,"endColumn":13},{"ruleId":"679","severity":1,"message":"758","line":4,"column":8,"nodeType":"681","messageId":"682","endLine":4,"endColumn":17},{"ruleId":"679","severity":1,"message":"759","line":5,"column":8,"nodeType":"681","messageId":"682","endLine":5,"endColumn":17},{"ruleId":"679","severity":1,"message":"760","line":6,"column":8,"nodeType":"681","messageId":"682","endLine":6,"endColumn":22},{"ruleId":"679","severity":1,"message":"761","line":7,"column":8,"nodeType":"681","messageId":"682","endLine":7,"endColumn":17},{"ruleId":"679","severity":1,"message":"762","line":8,"column":8,"nodeType":"681","messageId":"682","endLine":8,"endColumn":16},{"ruleId":"679","severity":1,"message":"763","line":10,"column":10,"nodeType":"681","messageId":"682","endLine":10,"endColumn":20},{"ruleId":"679","severity":1,"message":"702","line":11,"column":8,"nodeType":"681","messageId":"682","endLine":11,"endColumn":12},{"ruleId":"679","severity":1,"message":"703","line":12,"column":8,"nodeType":"681","messageId":"682","endLine":12,"endColumn":16},{"ruleId":"679","severity":1,"message":"705","line":15,"column":20,"nodeType":"681","messageId":"682","endLine":15,"endColumn":25},{"ruleId":"679","severity":1,"message":"764","line":16,"column":8,"nodeType":"681","messageId":"682","endLine":16,"endColumn":14},{"ruleId":"679","severity":1,"message":"765","line":21,"column":8,"nodeType":"681","messageId":"682","endLine":21,"endColumn":18},{"ruleId":"679","severity":1,"message":"766","line":22,"column":8,"nodeType":"681","messageId":"682","endLine":22,"endColumn":14},{"ruleId":"679","severity":1,"message":"704","line":50,"column":11,"nodeType":"681","messageId":"682","endLine":50,"endColumn":18},{"ruleId":"679","severity":1,"message":"688","line":51,"column":12,"nodeType":"681","messageId":"682","endLine":51,"endColumn":19},{"ruleId":"679","severity":1,"message":"689","line":52,"column":12,"nodeType":"681","messageId":"682","endLine":52,"endColumn":17},{"ruleId":"679","severity":1,"message":"748","line":53,"column":12,"nodeType":"681","messageId":"682","endLine":53,"endColumn":22},{"ruleId":"679","severity":1,"message":"750","line":55,"column":12,"nodeType":"681","messageId":"682","endLine":55,"endColumn":24},{"ruleId":"679","severity":1,"message":"731","line":55,"column":26,"nodeType":"681","messageId":"682","endLine":55,"endColumn":41},{"ruleId":"679","severity":1,"message":"732","line":56,"column":12,"nodeType":"681","messageId":"682","endLine":56,"endColumn":18},{"ruleId":"679","severity":1,"message":"753","line":61,"column":11,"nodeType":"681","messageId":"682","endLine":61,"endColumn":23},{"ruleId":"690","severity":1,"message":"691","line":62,"column":31,"nodeType":"692","messageId":"693","endLine":62,"endColumn":33},{"ruleId":"679","severity":1,"message":"755","line":82,"column":23,"nodeType":"681","messageId":"682","endLine":82,"endColumn":35},{"ruleId":"679","severity":1,"message":"767","line":87,"column":14,"nodeType":"681","messageId":"682","endLine":87,"endColumn":22},{"ruleId":"725","severity":1,"message":"726","line":187,"column":29,"nodeType":"697","endLine":191,"endColumn":31},{"ruleId":"679","severity":1,"message":"716","line":9,"column":8,"nodeType":"681","messageId":"682","endLine":9,"endColumn":16},{"ruleId":"679","severity":1,"message":"705","line":2,"column":10,"nodeType":"681","messageId":"682","endLine":2,"endColumn":15},{"ruleId":"679","severity":1,"message":"733","line":2,"column":17,"nodeType":"681","messageId":"682","endLine":2,"endColumn":25},{"ruleId":"679","severity":1,"message":"687","line":2,"column":27,"nodeType":"681","messageId":"682","endLine":2,"endColumn":35},{"ruleId":"679","severity":1,"message":"734","line":2,"column":37,"nodeType":"681","messageId":"682","endLine":2,"endColumn":48},{"ruleId":"679","severity":1,"message":"768","line":1,"column":38,"nodeType":"681","messageId":"682","endLine":1,"endColumn":48},{"ruleId":"679","severity":1,"message":"735","line":4,"column":10,"nodeType":"681","messageId":"682","endLine":4,"endColumn":17},{"ruleId":"679","severity":1,"message":"736","line":5,"column":8,"nodeType":"681","messageId":"682","endLine":5,"endColumn":13},{"ruleId":"679","severity":1,"message":"737","line":6,"column":22,"nodeType":"681","messageId":"682","endLine":6,"endColumn":31},{"ruleId":"679","severity":1,"message":"687","line":7,"column":10,"nodeType":"681","messageId":"682","endLine":7,"endColumn":18},{"ruleId":"679","severity":1,"message":"705","line":7,"column":20,"nodeType":"681","messageId":"682","endLine":7,"endColumn":25},{"ruleId":"679","severity":1,"message":"738","line":10,"column":8,"nodeType":"681","messageId":"682","endLine":10,"endColumn":17},{"ruleId":"679","severity":1,"message":"715","line":11,"column":8,"nodeType":"681","messageId":"682","endLine":11,"endColumn":14},{"ruleId":"679","severity":1,"message":"739","line":14,"column":8,"nodeType":"681","messageId":"682","endLine":14,"endColumn":16},{"ruleId":"679","severity":1,"message":"769","line":15,"column":10,"nodeType":"681","messageId":"682","endLine":15,"endColumn":23},{"ruleId":"679","severity":1,"message":"740","line":18,"column":8,"nodeType":"681","messageId":"682","endLine":18,"endColumn":14},{"ruleId":"679","severity":1,"message":"741","line":19,"column":8,"nodeType":"681","messageId":"682","endLine":19,"endColumn":20},{"ruleId":"679","severity":1,"message":"742","line":20,"column":8,"nodeType":"681","messageId":"682","endLine":20,"endColumn":12},{"ruleId":"679","severity":1,"message":"743","line":22,"column":8,"nodeType":"681","messageId":"682","endLine":22,"endColumn":29},{"ruleId":"679","severity":1,"message":"744","line":25,"column":8,"nodeType":"681","messageId":"682","endLine":25,"endColumn":17},{"ruleId":"679","severity":1,"message":"688","line":57,"column":12,"nodeType":"681","messageId":"682","endLine":57,"endColumn":19},{"ruleId":"679","severity":1,"message":"746","line":57,"column":21,"nodeType":"681","messageId":"682","endLine":57,"endColumn":31},{"ruleId":"679","severity":1,"message":"689","line":58,"column":12,"nodeType":"681","messageId":"682","endLine":58,"endColumn":17},{"ruleId":"679","severity":1,"message":"747","line":58,"column":19,"nodeType":"681","messageId":"682","endLine":58,"endColumn":27},{"ruleId":"679","severity":1,"message":"748","line":59,"column":12,"nodeType":"681","messageId":"682","endLine":59,"endColumn":22},{"ruleId":"679","severity":1,"message":"749","line":59,"column":24,"nodeType":"681","messageId":"682","endLine":59,"endColumn":37},{"ruleId":"679","severity":1,"message":"750","line":61,"column":12,"nodeType":"681","messageId":"682","endLine":61,"endColumn":24},{"ruleId":"679","severity":1,"message":"731","line":61,"column":26,"nodeType":"681","messageId":"682","endLine":61,"endColumn":41},{"ruleId":"679","severity":1,"message":"732","line":62,"column":12,"nodeType":"681","messageId":"682","endLine":62,"endColumn":18},{"ruleId":"679","severity":1,"message":"751","line":62,"column":20,"nodeType":"681","messageId":"682","endLine":62,"endColumn":29},{"ruleId":"679","severity":1,"message":"752","line":63,"column":20,"nodeType":"681","messageId":"682","endLine":63,"endColumn":29},{"ruleId":"679","severity":1,"message":"753","line":73,"column":11,"nodeType":"681","messageId":"682","endLine":73,"endColumn":23},{"ruleId":"690","severity":1,"message":"691","line":74,"column":31,"nodeType":"692","messageId":"693","endLine":74,"endColumn":33},{"ruleId":"679","severity":1,"message":"754","line":104,"column":13,"nodeType":"681","messageId":"682","endLine":104,"endColumn":21},{"ruleId":"679","severity":1,"message":"755","line":104,"column":23,"nodeType":"681","messageId":"682","endLine":104,"endColumn":35},{"ruleId":"679","severity":1,"message":"710","line":104,"column":37,"nodeType":"681","messageId":"682","endLine":104,"endColumn":43},{"ruleId":"679","severity":1,"message":"756","line":109,"column":14,"nodeType":"681","messageId":"682","endLine":109,"endColumn":28},{"ruleId":"679","severity":1,"message":"680","line":10,"column":11,"nodeType":"681","messageId":"682","endLine":10,"endColumn":13},{"ruleId":"679","severity":1,"message":"683","line":11,"column":11,"nodeType":"681","messageId":"682","endLine":11,"endColumn":16},{"ruleId":"679","severity":1,"message":"684","line":12,"column":11,"nodeType":"681","messageId":"682","endLine":12,"endColumn":16},{"ruleId":"679","severity":1,"message":"685","line":13,"column":11,"nodeType":"681","messageId":"682","endLine":13,"endColumn":19},{"ruleId":"679","severity":1,"message":"716","line":9,"column":8,"nodeType":"681","messageId":"682","endLine":9,"endColumn":16},{"ruleId":"679","severity":1,"message":"705","line":15,"column":20,"nodeType":"681","messageId":"682","endLine":15,"endColumn":25},{"ruleId":"679","severity":1,"message":"704","line":40,"column":11,"nodeType":"681","messageId":"682","endLine":40,"endColumn":18},{"ruleId":"679","severity":1,"message":"688","line":41,"column":12,"nodeType":"681","messageId":"682","endLine":41,"endColumn":19},{"ruleId":"679","severity":1,"message":"689","line":42,"column":12,"nodeType":"681","messageId":"682","endLine":42,"endColumn":17},{"ruleId":"679","severity":1,"message":"731","line":45,"column":26,"nodeType":"681","messageId":"682","endLine":45,"endColumn":41},{"ruleId":"679","severity":1,"message":"732","line":46,"column":12,"nodeType":"681","messageId":"682","endLine":46,"endColumn":18},{"ruleId":"690","severity":1,"message":"691","line":52,"column":31,"nodeType":"692","messageId":"693","endLine":52,"endColumn":33},{"ruleId":"679","severity":1,"message":"710","line":72,"column":37,"nodeType":"681","messageId":"682","endLine":72,"endColumn":43},{"ruleId":"679","severity":1,"message":"680","line":10,"column":11,"nodeType":"681","messageId":"682","endLine":10,"endColumn":13},{"ruleId":"679","severity":1,"message":"683","line":11,"column":11,"nodeType":"681","messageId":"682","endLine":11,"endColumn":16},{"ruleId":"679","severity":1,"message":"684","line":12,"column":11,"nodeType":"681","messageId":"682","endLine":12,"endColumn":16},{"ruleId":"679","severity":1,"message":"685","line":13,"column":11,"nodeType":"681","messageId":"682","endLine":13,"endColumn":19},{"ruleId":"679","severity":1,"message":"716","line":9,"column":8,"nodeType":"681","messageId":"682","endLine":9,"endColumn":16},{"ruleId":"679","severity":1,"message":"705","line":15,"column":20,"nodeType":"681","messageId":"682","endLine":15,"endColumn":25},{"ruleId":"679","severity":1,"message":"704","line":40,"column":11,"nodeType":"681","messageId":"682","endLine":40,"endColumn":18},{"ruleId":"679","severity":1,"message":"688","line":41,"column":12,"nodeType":"681","messageId":"682","endLine":41,"endColumn":19},{"ruleId":"679","severity":1,"message":"689","line":42,"column":12,"nodeType":"681","messageId":"682","endLine":42,"endColumn":17},{"ruleId":"679","severity":1,"message":"731","line":45,"column":26,"nodeType":"681","messageId":"682","endLine":45,"endColumn":41},{"ruleId":"679","severity":1,"message":"732","line":46,"column":12,"nodeType":"681","messageId":"682","endLine":46,"endColumn":18},{"ruleId":"690","severity":1,"message":"691","line":52,"column":31,"nodeType":"692","messageId":"693","endLine":52,"endColumn":33},{"ruleId":"679","severity":1,"message":"710","line":72,"column":37,"nodeType":"681","messageId":"682","endLine":72,"endColumn":43},{"ruleId":"679","severity":1,"message":"770","line":2,"column":10,"nodeType":"681","messageId":"682","endLine":2,"endColumn":18},{"ruleId":"679","severity":1,"message":"768","line":1,"column":38,"nodeType":"681","messageId":"682","endLine":1,"endColumn":48},{"ruleId":"679","severity":1,"message":"689","line":30,"column":12,"nodeType":"681","messageId":"682","endLine":30,"endColumn":17},{"ruleId":"690","severity":1,"message":"771","line":63,"column":18,"nodeType":"692","messageId":"693","endLine":63,"endColumn":20},{"ruleId":"772","severity":1,"message":"773","line":47,"column":9,"nodeType":"774","messageId":"775","endLine":47,"endColumn":27},{"ruleId":"679","severity":1,"message":"776","line":1,"column":27,"nodeType":"681","messageId":"682","endLine":1,"endColumn":36},{"ruleId":"679","severity":1,"message":"768","line":1,"column":38,"nodeType":"681","messageId":"682","endLine":1,"endColumn":48},{"ruleId":"679","severity":1,"message":"777","line":9,"column":27,"nodeType":"681","messageId":"682","endLine":9,"endColumn":35},{"ruleId":"679","severity":1,"message":"778","line":11,"column":19,"nodeType":"681","messageId":"682","endLine":11,"endColumn":29},{"ruleId":"679","severity":1,"message":"689","line":29,"column":12,"nodeType":"681","messageId":"682","endLine":29,"endColumn":17},{"ruleId":"679","severity":1,"message":"779","line":36,"column":37,"nodeType":"681","messageId":"682","endLine":36,"endColumn":44},{"ruleId":"679","severity":1,"message":"780","line":36,"column":46,"nodeType":"681","messageId":"682","endLine":36,"endColumn":54},{"ruleId":"679","severity":1,"message":"776","line":1,"column":27,"nodeType":"681","messageId":"682","endLine":1,"endColumn":36},{"ruleId":"679","severity":1,"message":"768","line":1,"column":38,"nodeType":"681","messageId":"682","endLine":1,"endColumn":48},{"ruleId":"679","severity":1,"message":"777","line":9,"column":27,"nodeType":"681","messageId":"682","endLine":9,"endColumn":35},{"ruleId":"679","severity":1,"message":"778","line":11,"column":19,"nodeType":"681","messageId":"682","endLine":11,"endColumn":29},{"ruleId":"679","severity":1,"message":"689","line":29,"column":12,"nodeType":"681","messageId":"682","endLine":29,"endColumn":17},{"ruleId":"679","severity":1,"message":"779","line":36,"column":37,"nodeType":"681","messageId":"682","endLine":36,"endColumn":44},{"ruleId":"679","severity":1,"message":"780","line":36,"column":46,"nodeType":"681","messageId":"682","endLine":36,"endColumn":54},{"ruleId":"679","severity":1,"message":"688","line":11,"column":12,"nodeType":"681","messageId":"682","endLine":11,"endColumn":19},{"ruleId":"679","severity":1,"message":"689","line":12,"column":12,"nodeType":"681","messageId":"682","endLine":12,"endColumn":17},{"ruleId":"706","severity":1,"message":"707","line":42,"column":8,"nodeType":"708","endLine":42,"endColumn":10,"suggestions":"781"},{"ruleId":"698","severity":1,"message":"699","line":51,"column":9,"nodeType":"697","endLine":51,"endColumn":59},{"ruleId":"698","severity":1,"message":"699","line":54,"column":9,"nodeType":"697","endLine":54,"endColumn":58},{"ruleId":"679","severity":1,"message":"719","line":11,"column":26,"nodeType":"681","messageId":"682","endLine":11,"endColumn":42},{"ruleId":"679","severity":1,"message":"715","line":14,"column":8,"nodeType":"681","messageId":"682","endLine":14,"endColumn":14},{"ruleId":"679","severity":1,"message":"687","line":20,"column":10,"nodeType":"681","messageId":"682","endLine":20,"endColumn":18},{"ruleId":"679","severity":1,"message":"782","line":78,"column":12,"nodeType":"681","messageId":"682","endLine":78,"endColumn":19},{"ruleId":"783","severity":2,"message":"784","line":80,"column":37,"nodeType":"681","messageId":"785","endLine":80,"endColumn":45},{"ruleId":"679","severity":1,"message":"786","line":81,"column":24,"nodeType":"681","messageId":"682","endLine":81,"endColumn":37},{"ruleId":"783","severity":2,"message":"784","line":81,"column":41,"nodeType":"681","messageId":"785","endLine":81,"endColumn":49},{"ruleId":"679","severity":1,"message":"720","line":99,"column":11,"nodeType":"681","messageId":"682","endLine":99,"endColumn":28},{"ruleId":"679","severity":1,"message":"721","line":114,"column":15,"nodeType":"681","messageId":"682","endLine":114,"endColumn":21},{"ruleId":"679","severity":1,"message":"722","line":121,"column":19,"nodeType":"681","messageId":"682","endLine":121,"endColumn":27},{"ruleId":"706","severity":1,"message":"723","line":140,"column":20,"nodeType":"724","endLine":140,"endColumn":37},{"ruleId":"679","severity":1,"message":"735","line":4,"column":10,"nodeType":"681","messageId":"682","endLine":4,"endColumn":17},{"ruleId":"679","severity":1,"message":"736","line":5,"column":8,"nodeType":"681","messageId":"682","endLine":5,"endColumn":13},{"ruleId":"679","severity":1,"message":"737","line":6,"column":22,"nodeType":"681","messageId":"682","endLine":6,"endColumn":31},{"ruleId":"679","severity":1,"message":"687","line":7,"column":10,"nodeType":"681","messageId":"682","endLine":7,"endColumn":18},{"ruleId":"679","severity":1,"message":"705","line":7,"column":20,"nodeType":"681","messageId":"682","endLine":7,"endColumn":25},{"ruleId":"679","severity":1,"message":"739","line":14,"column":8,"nodeType":"681","messageId":"682","endLine":14,"endColumn":16},{"ruleId":"679","severity":1,"message":"742","line":19,"column":8,"nodeType":"681","messageId":"682","endLine":19,"endColumn":12},{"ruleId":"679","severity":1,"message":"787","line":20,"column":8,"nodeType":"681","messageId":"682","endLine":20,"endColumn":11},{"ruleId":"679","severity":1,"message":"788","line":21,"column":8,"nodeType":"681","messageId":"682","endLine":21,"endColumn":15},{"ruleId":"679","severity":1,"message":"745","line":47,"column":13,"nodeType":"681","messageId":"682","endLine":47,"endColumn":20},{"ruleId":"679","severity":1,"message":"704","line":49,"column":11,"nodeType":"681","messageId":"682","endLine":49,"endColumn":18},{"ruleId":"679","severity":1,"message":"688","line":50,"column":12,"nodeType":"681","messageId":"682","endLine":50,"endColumn":19},{"ruleId":"679","severity":1,"message":"746","line":50,"column":21,"nodeType":"681","messageId":"682","endLine":50,"endColumn":31},{"ruleId":"679","severity":1,"message":"689","line":51,"column":12,"nodeType":"681","messageId":"682","endLine":51,"endColumn":17},{"ruleId":"679","severity":1,"message":"747","line":51,"column":19,"nodeType":"681","messageId":"682","endLine":51,"endColumn":27},{"ruleId":"679","severity":1,"message":"748","line":52,"column":12,"nodeType":"681","messageId":"682","endLine":52,"endColumn":22},{"ruleId":"679","severity":1,"message":"749","line":52,"column":24,"nodeType":"681","messageId":"682","endLine":52,"endColumn":37},{"ruleId":"679","severity":1,"message":"750","line":54,"column":12,"nodeType":"681","messageId":"682","endLine":54,"endColumn":24},{"ruleId":"679","severity":1,"message":"731","line":54,"column":26,"nodeType":"681","messageId":"682","endLine":54,"endColumn":41},{"ruleId":"679","severity":1,"message":"732","line":55,"column":12,"nodeType":"681","messageId":"682","endLine":55,"endColumn":18},{"ruleId":"679","severity":1,"message":"751","line":55,"column":20,"nodeType":"681","messageId":"682","endLine":55,"endColumn":29},{"ruleId":"679","severity":1,"message":"752","line":56,"column":20,"nodeType":"681","messageId":"682","endLine":56,"endColumn":29},{"ruleId":"679","severity":1,"message":"753","line":66,"column":11,"nodeType":"681","messageId":"682","endLine":66,"endColumn":23},{"ruleId":"690","severity":1,"message":"691","line":67,"column":31,"nodeType":"692","messageId":"693","endLine":67,"endColumn":33},{"ruleId":"725","severity":1,"message":"726","line":181,"column":33,"nodeType":"697","endLine":184,"endColumn":35},{"ruleId":"679","severity":1,"message":"789","line":1,"column":37,"nodeType":"681","messageId":"682","endLine":1,"endColumn":47},{"ruleId":"706","severity":1,"message":"790","line":12,"column":8,"nodeType":"708","endLine":12,"endColumn":10,"suggestions":"791"},{"ruleId":"725","severity":1,"message":"726","line":17,"column":13,"nodeType":"697","endLine":17,"endColumn":66},{"ruleId":"679","severity":1,"message":"768","line":1,"column":38,"nodeType":"681","messageId":"682","endLine":1,"endColumn":48},{"ruleId":"679","severity":1,"message":"688","line":12,"column":12,"nodeType":"681","messageId":"682","endLine":12,"endColumn":19},{"ruleId":"679","severity":1,"message":"689","line":13,"column":12,"nodeType":"681","messageId":"682","endLine":13,"endColumn":17},{"ruleId":"706","severity":1,"message":"792","line":20,"column":8,"nodeType":"708","endLine":20,"endColumn":10,"suggestions":"793"},{"ruleId":"679","severity":1,"message":"768","line":1,"column":38,"nodeType":"681","messageId":"682","endLine":1,"endColumn":48},{"ruleId":"679","severity":1,"message":"689","line":34,"column":12,"nodeType":"681","messageId":"682","endLine":34,"endColumn":17},{"ruleId":"690","severity":1,"message":"771","line":70,"column":20,"nodeType":"692","messageId":"693","endLine":70,"endColumn":22},{"ruleId":"794","severity":1,"message":"795","line":129,"column":29,"nodeType":"796","endLine":129,"endColumn":40},"no-native-reassign",["797"],"no-negated-in-lhs",["798"],"no-unused-vars","'id' is assigned a value but never used.","Identifier","unusedVar","'token' is assigned a value but never used.","'roles' is assigned a value but never used.","'username' is assigned a value but never used.","'yupResolver' is defined but never used.","'getToken' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'user' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["797"],["798"],"'Edit' is defined but never used.","'Pageview' is defined but never used.","'history' is assigned a value but never used.","'getId' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadApiData'. Either include it or remove the dependency array.","ArrayExpression",["799"],"'errors' is assigned a value but never used.","no-dupe-keys","Duplicate key 'upload_file'.","ObjectExpression","Duplicate key 'secret'.","'Button' is defined but never used.","'MenuIcon' is defined but never used.","'Paper' is defined but never used.","'AppBar' is defined but never used.","'TextareaAutosize' is defined but never used.","'handleButtonClick' is assigned a value but never used.","'userId' is assigned a value but never used.","'response' is assigned a value but never used.","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","MemberExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["797"],["798"],"'createData' is defined but never used.","'rows' is assigned a value but never used.","'setSimpleSearch' is assigned a value but never used.","'result' is assigned a value but never used.","'getRoles' is defined but never used.","'getUsername' is defined but never used.","'Apidata' is defined but never used.","'axios' is defined but never used.","'useParams' is defined but never used.","'TextField' is defined but never used.","'SaveIcon' is defined but never used.","'Select' is defined but never used.","'ArrowForward' is defined but never used.","'Save' is defined but never used.","'CommentFileuploadform' is defined but never used.","'FormModel' is defined but never used.","'postals' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'setError' is assigned a value but never used.","'postalList' is assigned a value but never used.","'setPostalList' is assigned a value but never used.","'simpleSearch' is assigned a value but never used.","'setResult' is assigned a value but never used.","'setPostal' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'register' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'onSubmitAssign' is defined but never used.","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'TableContainer' is defined but never used.","'TableHead' is defined but never used.","'TableRow' is defined but never used.","'searchdata' is defined but never used.","'Moment' is defined but never used.","'SearchIcon' is defined but never used.","'Switch' is defined but never used.","'onSubmit' is defined but never used.","'useContext' is defined but never used.","'PostalContext' is defined but never used.","'Redirect' is defined but never used.","Expected '!==' and instead saw '!='.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'useEffect' is defined but never used.","'getUsers' is defined but never used.","'Controller' is defined but never used.","'control' is assigned a value but never used.","'setValue' is assigned a value but never used.",["800"],"'preview' is assigned a value but never used.","no-undef","'useState' is not defined.","undef","'setPageNumber' is assigned a value but never used.","'Fab' is defined but never used.","'AddIcon' is defined but never used.","'makeStyles' is defined but never used.","React Hook useEffect has a missing dependency: 'props.fileName'. Either include it or remove the dependency array.",["801"],"React Hook useEffect has a missing dependency: 'props.postalid'. Either include it or remove the dependency array.",["802"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"803","fix":"804"},{"desc":"803","fix":"805"},{"desc":"806","fix":"807"},{"desc":"808","fix":"809"},"Update the dependencies array to be: [loadApiData]",{"range":"810","text":"811"},{"range":"812","text":"811"},"Update the dependencies array to be: [props.fileName]",{"range":"813","text":"814"},"Update the dependencies array to be: [props.postalid]",{"range":"815","text":"816"},[1529,1531],"[loadApiData]",[1482,1484],[386,388],"[props.fileName]",[598,600],"[props.postalid]"]